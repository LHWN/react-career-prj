[{"/Users/lhwn/Documents/workspace/react_career_prj/src/index.js":"1","/Users/lhwn/Documents/workspace/react_career_prj/src/reportWebVitals.js":"2","/Users/lhwn/Documents/workspace/react_career_prj/src/Root.js":"3","/Users/lhwn/Documents/workspace/react_career_prj/src/redux/configureStore.js":"4","/Users/lhwn/Documents/workspace/react_career_prj/src/App.js":"5","/Users/lhwn/Documents/workspace/react_career_prj/src/redux/modules/index.js":"6","/Users/lhwn/Documents/workspace/react_career_prj/src/redux/modules/user.js":"7","/Users/lhwn/Documents/workspace/react_career_prj/src/components/Home.js":"8","/Users/lhwn/Documents/workspace/react_career_prj/src/components/SignIn/SignInWrapper.js":"9","/Users/lhwn/Documents/workspace/react_career_prj/src/lib/storage.js":"10","/Users/lhwn/Documents/workspace/react_career_prj/src/pages/index.js":"11","/Users/lhwn/Documents/workspace/react_career_prj/src/containers/Base/index.js":"12","/Users/lhwn/Documents/workspace/react_career_prj/src/containers/Main/index.js":"13","/Users/lhwn/Documents/workspace/react_career_prj/src/redux/modules/base.js":"14","/Users/lhwn/Documents/workspace/react_career_prj/src/redux/modules/auth.js":"15","/Users/lhwn/Documents/workspace/react_career_prj/src/redux/modules/crawl.js":"16","/Users/lhwn/Documents/workspace/react_career_prj/src/lib/api/auth.js":"17","/Users/lhwn/Documents/workspace/react_career_prj/src/components/listItems.js":"18","/Users/lhwn/Documents/workspace/react_career_prj/src/components/Chart.js":"19","/Users/lhwn/Documents/workspace/react_career_prj/src/components/Deposits.js":"20","/Users/lhwn/Documents/workspace/react_career_prj/src/components/Orders.js":"21","/Users/lhwn/Documents/workspace/react_career_prj/src/components/SignIn/SignInHead.js":"22","/Users/lhwn/Documents/workspace/react_career_prj/src/components/SignIn/SignInForm.js":"23","/Users/lhwn/Documents/workspace/react_career_prj/src/pages/Auth.js":"24","/Users/lhwn/Documents/workspace/react_career_prj/src/pages/Home.js":"25","/Users/lhwn/Documents/workspace/react_career_prj/src/containers/Base/HeaderContainer.js":"26","/Users/lhwn/Documents/workspace/react_career_prj/src/containers/Base/DrawerContainer.js":"27","/Users/lhwn/Documents/workspace/react_career_prj/src/containers/Main/MainContainer.js":"28","/Users/lhwn/Documents/workspace/react_career_prj/src/lib/api/crawl.js":"29","/Users/lhwn/Documents/workspace/react_career_prj/src/components/Title.js":"30","/Users/lhwn/Documents/workspace/react_career_prj/src/components/SignIn/SignInError.js":"31","/Users/lhwn/Documents/workspace/react_career_prj/src/components/Main/Copyright.js":"32","/Users/lhwn/Documents/workspace/react_career_prj/src/components/Main/Today.js":"33","/Users/lhwn/Documents/workspace/react_career_prj/src/components/Main/Chart.js":"34","/Users/lhwn/Documents/workspace/react_career_prj/src/components/Main/Blog.js":"35","/Users/lhwn/Documents/workspace/react_career_prj/src/lib/styleUtil.js":"36","/Users/lhwn/Documents/workspace/react_career_prj/src/components/SignIn/index.js":"37","/Users/lhwn/Documents/workspace/react_career_prj/src/components/Base/Drawer/index.js":"38","/Users/lhwn/Documents/workspace/react_career_prj/src/components/Base/Header/index.js":"39","/Users/lhwn/Documents/workspace/react_career_prj/src/components/Main/Title.js":"40","/Users/lhwn/Documents/workspace/react_career_prj/src/components/Base/Header/Header.js":"41","/Users/lhwn/Documents/workspace/react_career_prj/src/components/Base/Drawer/ListItems.js":"42"},{"size":552,"mtime":1615709914401,"results":"43","hashOfConfig":"44"},{"size":362,"mtime":1613948698837,"results":"45","hashOfConfig":"44"},{"size":354,"mtime":1615709896182,"results":"46","hashOfConfig":"44"},{"size":939,"mtime":1618429466978,"results":"47","hashOfConfig":"44"},{"size":4105,"mtime":1618530289123,"results":"48","hashOfConfig":"44"},{"size":293,"mtime":1618440027445,"results":"49","hashOfConfig":"44"},{"size":1578,"mtime":1618442924965,"results":"50","hashOfConfig":"44"},{"size":5803,"mtime":1617924627022,"results":"51","hashOfConfig":"44"},{"size":261,"mtime":1617408327256,"results":"52","hashOfConfig":"44"},{"size":703,"mtime":1617318283760,"results":"53","hashOfConfig":"44"},{"size":107,"mtime":1614897078421,"results":"54","hashOfConfig":"44"},{"size":128,"mtime":1617738770391,"results":"55","hashOfConfig":"44"},{"size":60,"mtime":1617739872167,"results":"56","hashOfConfig":"44"},{"size":566,"mtime":1617050818859,"results":"57","hashOfConfig":"44"},{"size":2822,"mtime":1618431938828,"results":"58","hashOfConfig":"44"},{"size":854,"mtime":1618958687474,"results":"59","hashOfConfig":"44"},{"size":587,"mtime":1617221304656,"results":"60","hashOfConfig":"44"},{"size":2510,"mtime":1613615372000,"results":"61","hashOfConfig":"44"},{"size":1372,"mtime":1617749740152,"results":"62","hashOfConfig":"44"},{"size":845,"mtime":1617922181288,"results":"63","hashOfConfig":"44"},{"size":2350,"mtime":1613615372000,"results":"64","hashOfConfig":"44"},{"size":612,"mtime":1613615372000,"results":"65","hashOfConfig":"44"},{"size":8189,"mtime":1618525785943,"results":"66","hashOfConfig":"44"},{"size":739,"mtime":1617408348216,"results":"67","hashOfConfig":"44"},{"size":143,"mtime":1614897026678,"results":"68","hashOfConfig":"44"},{"size":1229,"mtime":1618440161083,"results":"69","hashOfConfig":"44"},{"size":1325,"mtime":1617839336747,"results":"70","hashOfConfig":"44"},{"size":1958,"mtime":1618263607027,"results":"71","hashOfConfig":"44"},{"size":98,"mtime":1618429499184,"results":"72","hashOfConfig":"44"},{"size":342,"mtime":1613615372000,"results":"73","hashOfConfig":"44"},{"size":467,"mtime":1617060187182,"results":"74","hashOfConfig":"44"},{"size":465,"mtime":1617925124347,"results":"75","hashOfConfig":"44"},{"size":1934,"mtime":1618014101038,"results":"76","hashOfConfig":"44"},{"size":1254,"mtime":1617749572964,"results":"77","hashOfConfig":"44"},{"size":2876,"mtime":1618961554078,"results":"78","hashOfConfig":"44"},{"size":728,"mtime":1617057846184,"results":"79","hashOfConfig":"44"},{"size":60,"mtime":1617402094538,"results":"80","hashOfConfig":"44"},{"size":95,"mtime":1617839376843,"results":"81","hashOfConfig":"44"},{"size":36,"mtime":1615761982169,"results":"82","hashOfConfig":"44"},{"size":355,"mtime":1617740948937,"results":"83","hashOfConfig":"44"},{"size":4547,"mtime":1617836781786,"results":"84","hashOfConfig":"44"},{"size":2512,"mtime":1618959724331,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"xca93f",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"88"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"88"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"88"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"88"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"88"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"88"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"88"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/lhwn/Documents/workspace/react_career_prj/src/index.js",[],["178","179"],"/Users/lhwn/Documents/workspace/react_career_prj/src/reportWebVitals.js",[],"/Users/lhwn/Documents/workspace/react_career_prj/src/Root.js",[],"/Users/lhwn/Documents/workspace/react_career_prj/src/redux/configureStore.js",[],"/Users/lhwn/Documents/workspace/react_career_prj/src/App.js",["180","181","182"],"import React, { useEffect, Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport * as userActions from './redux/modules/user';\nimport clsx from 'clsx';\n\nimport { CssBaseline, makeStyles } from '@material-ui/core';\nimport { Home, Auth } from './pages';\nimport Homepage from './components/Home';\nimport SignIn from './components/SignIn/SignInWrapper';\nimport { HeaderContainer } from './containers/Base';\nimport { DrawerContainer } from './containers/Base';\nimport { MainContainer as Main } from './containers/Main';\nimport storage from './lib/storage';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex'\n  },\n  toolbar: {\n    paddingRight: 24 // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: 36\n  },\n  menuButtonHidden: {\n    display: 'none'\n  },\n  title: {\n    flexGrow: 1\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9)\n    }\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto'\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4)\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column'\n  },\n  fixedHeight: {\n    height: 240\n  }\n}));\n\nfunction App(props) {\n  const [open, setOpen] = React.useState(false);\n  const { UserActions } = props;\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  // App 이 불러와졌을 때 로컬스토리지에 있던 유저 정보를 사용\n  const initializeUserInfo = async () => {\n    const loggedInfo = storage.get('loggedInfo'); // 로그인 정보를 로컬 스토리지에서 가져온다.\n    if (!loggedInfo) return; // 로그인 정보가 없으면 여기서 멈춘다.\n\n    // const { UserActions } = this.props;\n    UserActions.setLoggedInfo(loggedInfo);\n    try {\n      await UserActions.checkStatus();\n    } catch (e) {\n      storage.remove('loggedInfo');\n      window.location.href = '/auth/login?expired';\n    }\n  };\n\n  useEffect(() => {\n    initializeUserInfo();\n  });\n\n  const classes = useStyles();\n  return (\n    <div>\n      <div className={classes.root}>\n        <CssBaseline />\n        <HeaderContainer open={open} useStyles={useStyles} handleDrawerOpen={handleDrawerOpen}></HeaderContainer>\n        <DrawerContainer open={open} useStyles={useStyles} handleDrawerClose={handleDrawerClose}></DrawerContainer>\n        <Route path=\"/\" component={Main} exact />\n      </div>\n      <Route path=\"/auth\" component={Auth} />\n      <Route path=\"/signIn\" component={SignIn} />\n      <Route exact path=\"/homepage\" component={Homepage} />\n    </div>\n  );\n}\n\nexport default connect(null, (dispatch) => ({\n  UserActions: bindActionCreators(userActions, dispatch)\n}))(App);\n","/Users/lhwn/Documents/workspace/react_career_prj/src/redux/modules/index.js",[],"/Users/lhwn/Documents/workspace/react_career_prj/src/redux/modules/user.js",[],"/Users/lhwn/Documents/workspace/react_career_prj/src/components/Home.js",[],"/Users/lhwn/Documents/workspace/react_career_prj/src/components/SignIn/SignInWrapper.js",[],"/Users/lhwn/Documents/workspace/react_career_prj/src/lib/storage.js",[],"/Users/lhwn/Documents/workspace/react_career_prj/src/pages/index.js",[],"/Users/lhwn/Documents/workspace/react_career_prj/src/containers/Base/index.js",[],"/Users/lhwn/Documents/workspace/react_career_prj/src/containers/Main/index.js",[],"/Users/lhwn/Documents/workspace/react_career_prj/src/redux/modules/base.js",[],"/Users/lhwn/Documents/workspace/react_career_prj/src/redux/modules/auth.js",[],"/Users/lhwn/Documents/workspace/react_career_prj/src/redux/modules/crawl.js",[],"/Users/lhwn/Documents/workspace/react_career_prj/src/lib/api/auth.js",[],"/Users/lhwn/Documents/workspace/react_career_prj/src/components/listItems.js",[],"/Users/lhwn/Documents/workspace/react_career_prj/src/components/Chart.js",[],"/Users/lhwn/Documents/workspace/react_career_prj/src/components/Deposits.js",[],"/Users/lhwn/Documents/workspace/react_career_prj/src/components/Orders.js",[],"/Users/lhwn/Documents/workspace/react_career_prj/src/components/SignIn/SignInHead.js",[],"/Users/lhwn/Documents/workspace/react_career_prj/src/components/SignIn/SignInForm.js",["183","184","185"],"import React, { Component } from 'react';\nimport { bindActionCreators, compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport styled from 'styled-components';\nimport debounce from 'lodash/debounce';\nimport queryString from 'query-string';\nimport { ContactSupportOutlined } from '@material-ui/icons';\n\nimport { isEmail } from 'validator';\nimport storage from '../../lib/storage';\nimport * as authActions from '../../redux/modules/auth';\nimport * as userActions from '../../redux/modules/user';\nimport SignInError from '../../components/SignIn/SignInError';\n\nconst InsertFormPositioner = styled.div`\n  /* width: 100%; */\n  /* display: flex;\n    justify-content: center;\n    align-items: center; */\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  :root {\n    --color-shadow-inset: inset 0 1px 0 rgba(225, 228, 232, 0.2);\n  }\n`;\n\nconst InsertFormContainer = styled.div`\n  width: 300px;\n\n  .largeText {\n    text-align: center;\n    font-size: 24px;\n    font-weight: 300;\n  }\n\n  .mediumText {\n    text-align: center;\n    font-size: 16px;\n    font-weight: 300;\n  }\n\n  .smallText {\n    text-align: center;\n    font-size: 14px;\n    font-weight: 300;\n  }\n`;\n\nconst InsertForm = styled.div`\n  /* width: 300px; */\n\n  border: 1px solid #eaecef;\n  border-radius: 5px;\n\n  position: relative; /* 추후 박스 하단에 추가 버튼을 위치시키기 위한 설정 */\n  background: #f6f8fa;\n  box-shadow: 0 0 8px 0 rgba(0, 0, 0, 0.04);\n\n  margin: 0 auto;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  box-sizing: border-box;\n\n  .accountLabel {\n    font-weight: 600;\n    display: block;\n    margin-bottom: 7px;\n    text-align: left;\n    font-size: 14px;\n    color: #24292e;\n  }\n\n  .input-block {\n    margin-top: 5px;\n    margin-bottom: 15px;\n    width: 100%;\n    padding: 5px 12px;\n    font-size: 14px;\n    line-height: 20px;\n    color: #24292e;\n    vertical-align: middle;\n    background-color: #fff;\n    border: 1px solid #e1e4e8;\n    border-radius: 6px;\n    outline: none;\n    box-shadow: --color-shadow-inset;\n    box-sizing: border-box;\n  }\n\n  .btn {\n    width: 90%;\n  }\n`;\n\nconst RequestAccountLink = styled.div`\n  padding: 15px 20px;\n\n  text-align: center;\n  border: 1px solid #d1d5da;\n  border-radius: 5px;\n  box-sizing: border-box;\n  margin-top: 16px;\n\n  p {\n    margin-top: 0;\n  }\n\n  .requestAccText {\n    color: #0366d6;\n    cursor: pointer;\n    text-decoration: none;\n\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n`;\n\nconst LoginButton = styled.div`\n  background-color: #2ea44f;\n  text-align: center;\n  color: #fff;\n  padding: 5px 16px;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 20px;\n  white-space: nowrap;\n  vertical-align: middle;\n  cursor: pointer;\n  border: 1px solid;\n  border-radius: 6px;\n`;\n\nclass SignInForm extends Component {\n  setError = (message) => {\n    const { AuthActions } = this.props;\n    AuthActions.setError({\n      form: 'login',\n      message\n    });\n  };\n\n  validate = {\n    email: (value) => {\n      if (!isEmail(value)) {\n        this.setError('잘못된 이메일 형식입니다.');\n        return false;\n      }\n      return true;\n    }\n  };\n\n  /**\n   * debounce 라이브러리 : 특정 함수가 반복적으로 호출될 때 바로 실행하지 않고, 주어진 시간(ms)만큼 쉬어줘야 함수가 실행된다.\n   * 함수가 호출되면 300ms 이후에 실행되는데, 만일 그 사이에 새로운 함수가 또 호출되면 기존에 대기시켰던 호출을 없애고, 새로운 호출을 대기시킨다.\n   */\n  checkEmailExists = debounce(async (email) => {\n    const { AuthActions } = this.props;\n    try {\n      await AuthActions.checkEmailExists(email);\n      if (this.props.exists.get('email')) {\n        this.setError('유효한 계정입니다.');\n      } else {\n        this.setError(null);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }, 300);\n\n  componentDidMount() {\n    const { location } = this.props;\n    const query = queryString.parse(location.search);\n\n    if (query.expired !== undefined) {\n      this.setError('세션이 만료되었습니다. 다시 로그인하세요.');\n    }\n  }\n\n  componentWillUnmount() {\n    const { AuthActions } = this.props;\n    AuthActions.initializeForm('login');\n  }\n\n  handleChange = (e) => {\n    const { AuthActions } = this.props;\n    const { name, value } = e.target;\n\n    AuthActions.changeInput({\n      name,\n      value,\n      form: 'login'\n    });\n\n    // 검증 작업\n    if (name === 'email') {\n      const validation = this.validate[name](value);\n      if (!validation) return;\n    }\n\n    // 이메일 존재여부 확인\n    const check = name === 'email' ? this.checkEmailExists : () => {};\n    check(value);\n  };\n\n  handleLocalLogin = async () => {\n    const { form, AuthActions, UserActions, history } = this.props;\n    const { email, password } = form.toJS();\n\n    console.log('input acc' + email + password);\n    console.log('this.props' + JSON.stringify(this.props));\n\n    try {\n      await AuthActions.localLogin({ email, password });\n      const loggedInfo = this.props.result.toJS();\n\n      UserActions.setLoggedInfo(loggedInfo);\n      history.push('/');\n      storage.set('loggedInfo', loggedInfo);\n    } catch (e) {\n      console.log('login error!');\n      this.setError('잘못된 계정입니다.');\n    }\n  };\n\n  render() {\n    const { handleChange, handleLocalLogin } = this;\n    const { error } = this.props;\n\n    console.log('error:' + error);\n\n    return (\n      <InsertFormPositioner>\n        <InsertFormContainer>\n          <h1 className=\"largeText\">Sign in to My Career!</h1>\n          <InsertForm>\n            <label for=\"login_field\" className=\"accountLabel\">\n              Username or email address\n            </label>\n            <input\n              type=\"text\"\n              name=\"email\"\n              id=\"login_field\"\n              className=\"input-block\"\n              autocapitalize=\"off\"\n              autocorrect=\"off\"\n              autocomplete=\"username\"\n              autofocus=\"autofocus\"\n              onChange={handleChange}\n            ></input>\n            <label for=\"password\" className=\"accountLabel\">\n              Password\n            </label>\n            <input type=\"password\" name=\"password\" id=\"password\" className=\"input-block\" autocomplete=\"current-password\" onChange={handleChange}></input>\n            {error && <SignInError>{error}</SignInError>}\n            <LoginButton onClick={handleLocalLogin}>Sign in</LoginButton>\n          </InsertForm>\n          <RequestAccountLink>\n            <p className=\"mediumText\">Do you want to see my career?</p>\n            <a\n              className=\"mediumText\"\n              className=\"requestAccText\"\n              href=\"mailto:wlsekffo1674@naver.com\n                          ?subject=Request%20for%20an%20account.\n                          &body=Dear%20Hyewon%0D%0A%0D%0A\n                          I%20am%20writing%20to%20request%20an%20account%20that%20I%20can%20access.%0D%0A\n                          I%20will%20be%20waiting%20for%20your%20reply.%20Thank%20you.%0D%0A%0D%0A\n                          Best%20Regards.%0D%0A\"\n            >\n              Send me an email!\n            </a>\n          </RequestAccountLink>\n        </InsertFormContainer>\n      </InsertFormPositioner>\n    );\n  }\n}\n\n// export default connect(\n//   (state) => ({\n//     form: state.auth.getIn(['login', 'form']),\n//     error: state.auth.getIn(['login', 'error']),\n//     exists: state.auth.getIn(['login', 'exists']),\n//     result: state.auth.get('result')\n//   }),\n//   (dispatch) => ({\n//     AuthActions: bindActionCreators(authActions, dispatch),\n//     UserActions: bindActionCreators(userActions, dispatch)\n//   })\n// )(SignInForm);\n\nexport default withRouter(\n  connect(\n    (state) => ({\n      form: state.auth.getIn(['login', 'form']),\n      error: state.auth.getIn(['login', 'error']),\n      exists: state.auth.getIn(['login', 'exists']),\n      result: state.auth.get('result')\n    }),\n    (dispatch) => ({\n      AuthActions: bindActionCreators(authActions, dispatch),\n      UserActions: bindActionCreators(userActions, dispatch)\n    })\n  )(SignInForm)\n);\n","/Users/lhwn/Documents/workspace/react_career_prj/src/pages/Auth.js",[],"/Users/lhwn/Documents/workspace/react_career_prj/src/pages/Home.js",[],"/Users/lhwn/Documents/workspace/react_career_prj/src/containers/Base/HeaderContainer.js",[],"/Users/lhwn/Documents/workspace/react_career_prj/src/containers/Base/DrawerContainer.js",["186"],"import React from 'react';\nimport { connect } from 'react-redux';\nimport { makeStyles } from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport Drawer from '@material-ui/core/Drawer';\nimport { mainListItems, secondaryListItems } from '../../components/Base/Drawer';\nimport clsx from 'clsx';\n\nconst DrawerContainer = (props) => {\n  const { visible, useStyles } = props;\n  const classes = useStyles();\n\n  if (!visible) return null;\n  return (\n    <Drawer\n      variant=\"permanent\"\n      classes={{\n        paper: clsx(classes.drawerPaper, !props.open && classes.drawerPaperClose)\n        // paper: clsx(classes.drawerPaperClose, props.open && classes.drawerPaper)\n      }}\n      open={props.open}\n    >\n      <div className={classes.toolbarIcon}>\n        <IconButton onClick={props.handleDrawerClose}>\n          <ChevronLeftIcon />\n        </IconButton>\n      </div>\n      <Divider />\n      <List>{mainListItems}</List>\n      <Divider />\n      <List>{secondaryListItems}</List>\n    </Drawer>\n  );\n};\n\nexport default connect(\n  (state) => ({\n    visible: state.base.getIn(['header', 'visible'])\n  }),\n  (dispatch) => ({})\n)(DrawerContainer);\n","/Users/lhwn/Documents/workspace/react_career_prj/src/containers/Main/MainContainer.js",[],"/Users/lhwn/Documents/workspace/react_career_prj/src/lib/api/crawl.js",[],"/Users/lhwn/Documents/workspace/react_career_prj/src/components/Title.js",[],"/Users/lhwn/Documents/workspace/react_career_prj/src/components/SignIn/SignInError.js",[],"/Users/lhwn/Documents/workspace/react_career_prj/src/components/Main/Copyright.js",["187"],"import React, { Component } from 'react';\n\nimport { Typography } from '@material-ui/core';\nimport Link from '@material-ui/core/Link';\n\nconst Copyright = () => {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://github.com/LHWN\">\n        LHWN's Github\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n};\n\nexport default Copyright;\n","/Users/lhwn/Documents/workspace/react_career_prj/src/components/Main/Today.js",["188"],"import React, { useEffect, useState } from 'react';\n\nimport { makeStyles, Typography } from '@material-ui/core';\nimport Link from '@material-ui/core/Link';\nimport moment from 'moment';\n\nimport Title from './Title';\n\nconst preventDefault = (event) => {\n  event.preventDefault();\n};\n\nconst useStyles = makeStyles({\n  depositContext: {\n    flex: 1\n  }\n});\n\nconst Today = () => {\n  const [currentTime, setCurrentTime] = useState(moment()); // useState Hook 을 통해 timer 값 Default 설정\n  let timer = null;\n  useEffect(() => {\n    // timer 변수에 인터벌 종료를 위해 저장\n    timer = setInterval(() => {\n      setCurrentTime(moment()); // 현재 시간을 1000ms = 1s 마다 저장\n    }, 1000);\n    return () => {\n      clearInterval(timer); // 함수 unmount 시 clearInterval 해주기\n    };\n  }, []);\n\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <Title>Today</Title>\n      {/* 현재시각 : 시계처럼 만들기 */}\n      <Typography component=\"p\" variant=\"h3\" color=\"primary\">\n        {currentTime.format('HH:mm:ss')}\n      </Typography>\n      <Typography component=\"p\" variant=\"h5\">\n        {/* 오늘 날짜 가져오기 */}\n        {'on '}\n        {moment().format('DD')}\n        {', '}\n        {['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'][moment().format('M') - 1]}\n        {', '}\n        {moment().format('YYYY')}\n      </Typography>\n      <Typography color=\"textSecondary\" className={classes.depositContext}>\n        {/* dday 가져오기 */}\n        {'created Date D'}\n        {moment('2021-02-19').diff(moment().format('YYYY-MM-DD', 'days'), 'days')}\n      </Typography>\n      {/* 클릭 구현할거 생각하기 */}\n      <div>\n        <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\n          Click here.\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Today;\n","/Users/lhwn/Documents/workspace/react_career_prj/src/components/Main/Chart.js",["189"],"import React from 'react';\nimport { useTheme } from '@material-ui/core/styles';\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\n\nimport Title from './Title';\n\nconst createData = (time, amount) => {\n  return { time, amount };\n};\n\nconst data = [\n  createData('00:00', 0),\n  createData('03:00', 300),\n  createData('06:00', 600),\n  createData('09:00', 800),\n  createData('12:00', 1500),\n  createData('15:00', 2000),\n  createData('18:00', 2400),\n  createData('21:00', 2400),\n  createData('24:00', undefined)\n];\n\nexport default function Chart() {\n  const theme = useTheme();\n\n  return (\n    <React.Fragment>\n      <Title>Today</Title>\n      <ResponsiveContainer>\n        <LineChart\n          data={data}\n          margin={{\n            top: 16,\n            right: 16,\n            bottom: 0,\n            left: 24\n          }}\n        >\n          <XAxis dataKey=\"time\" stroke={theme.palette.text.secondary} />\n          <YAxis stroke={theme.palette.text.secondary}>\n            <Label angle={270} position=\"left\" style={{ textAnchor: 'middle', fill: theme.palette.text.primary }}>\n              Sales ($)\n            </Label>\n          </YAxis>\n        </LineChart>\n      </ResponsiveContainer>\n    </React.Fragment>\n  );\n}\n","/Users/lhwn/Documents/workspace/react_career_prj/src/components/Main/Blog.js",["190","191"],"/Users/lhwn/Documents/workspace/react_career_prj/src/lib/styleUtil.js",[],"/Users/lhwn/Documents/workspace/react_career_prj/src/components/SignIn/index.js",[],"/Users/lhwn/Documents/workspace/react_career_prj/src/components/Base/Drawer/index.js",[],"/Users/lhwn/Documents/workspace/react_career_prj/src/components/Base/Header/index.js",[],"/Users/lhwn/Documents/workspace/react_career_prj/src/components/Main/Title.js",[],"/Users/lhwn/Documents/workspace/react_career_prj/src/components/Base/Header/Header.js",["192","193"],"import React from 'react';\nimport { AppBar, ListItemIcon, makeStyles } from '@material-ui/core';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Typography from '@material-ui/core/Typography';\nimport Badge from '@material-ui/core/Badge';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport Avatar from '@material-ui/core/Avatar';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { withStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport { Link as RouterLink } from 'react-router-dom';\n\nconst drawerWidth = 240;\n\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     display: 'flex'\n//   },\n//   toolbar: {\n//     paddingRight: 24 // keep right padding when drawer closed\n//   },\n//   appBar: {\n//     zIndex: theme.zIndex.drawer + 1,\n//     transition: theme.transitions.create(['width', 'margin'], {\n//       easing: theme.transitions.easing.sharp,\n//       duration: theme.transitions.duration.leavingScreen\n//     })\n//   },\n//   appBarShift: {\n//     marginLeft: drawerWidth,\n//     width: `calc(100% - ${drawerWidth}px)`,\n//     transition: theme.transitions.create(['width', 'margin'], {\n//       easing: theme.transitions.easing.sharp,\n//       duration: theme.transitions.duration.enteringScreen\n//     })\n//   },\n//   menuButton: {\n//     marginRight: 36\n//   },\n//   menuButtonHidden: {\n//     display: 'none'\n//   },\n//   title: {\n//     flexGrow: 1\n//   }\n// }));\n\nconst StyledMenu = withStyles({\n  paper: {\n    border: '1px solid #d3d4d5'\n  }\n})((props) => (\n  <Menu\n    elevation={0}\n    getContentAnchorEl={null}\n    anchorOrigin={{\n      vertical: 'bottom',\n      horizontal: 'center'\n    }}\n    transformOrigin={{\n      vertical: 'top',\n      horizontal: 'center'\n    }}\n    {...props}\n  />\n));\n\nconst StyledMenuItem = withStyles((theme) => ({\n  root: {\n    '&:focus': {\n      backgroundColor: theme.palette.primary.main,\n      '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\n        color: theme.palette.common.white\n      }\n    }\n  }\n}))(MenuItem);\n\nconst Header = (props) => {\n  const classes = props.useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, props.open && classes.appBarShift)}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton edge=\"start\" color=\"inherit\" aria-label=\"open drawer\" onClick={props.handleDrawerOpen} className={clsx(classes.menuButton, props.open && classes.menuButtonHidden)}>\n            <MenuIcon />\n          </IconButton>\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n            Miracle Morning, LHWN\n          </Typography>\n          <IconButton color=\"inherit\">\n            <Badge badgeContent={4} color=\"secondary\">\n              <NotificationsIcon />\n            </Badge>\n          </IconButton>\n          {props.logged ? (\n            <>\n              <Avatar alt=\"thumbnail\" src={props.loggedThumbnail} onClick={handleClick} />\n              <StyledMenu id=\"userMenu\" anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)} onClose={handleClose}>\n                <StyledMenuItem onClick={props.handleLogout}>\n                  <ListItemIcon>\n                    <ExitToAppIcon fontsize=\"small\" />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Logout\" />\n                </StyledMenuItem>\n                <StyledMenuItem>\n                  <ListItemIcon>\n                    <ExitToAppIcon fontsize=\"small\" />\n                  </ListItemIcon>\n                  <ListItemText primary=\"...\" />\n                </StyledMenuItem>\n              </StyledMenu>\n            </>\n          ) : (\n            <IconButton color=\"inherit\" component={RouterLink} to=\"/auth\">\n              <AccountCircleIcon style={{ cursor: 'pointer' }}></AccountCircleIcon>\n            </IconButton>\n          )}\n        </Toolbar>\n      </AppBar>\n    </>\n  );\n};\n\nexport default Header;\n","/Users/lhwn/Documents/workspace/react_career_prj/src/components/Base/Drawer/ListItems.js",[],{"ruleId":"194","replacedBy":"195"},{"ruleId":"196","replacedBy":"197"},{"ruleId":"198","severity":1,"message":"199","line":1,"column":28,"nodeType":"200","messageId":"201","endLine":1,"endColumn":37},{"ruleId":"198","severity":1,"message":"202","line":6,"column":8,"nodeType":"200","messageId":"201","endLine":6,"endColumn":12},{"ruleId":"198","severity":1,"message":"203","line":9,"column":10,"nodeType":"200","messageId":"201","endLine":9,"endColumn":14},{"ruleId":"198","severity":1,"message":"204","line":2,"column":30,"nodeType":"200","messageId":"201","endLine":2,"endColumn":37},{"ruleId":"198","severity":1,"message":"205","line":9,"column":10,"nodeType":"200","messageId":"201","endLine":9,"endColumn":32},{"ruleId":"206","severity":1,"message":"207","line":268,"column":15,"nodeType":"208","endLine":268,"endColumn":41},{"ruleId":"198","severity":1,"message":"209","line":3,"column":10,"nodeType":"200","messageId":"201","endLine":3,"endColumn":20},{"ruleId":"198","severity":1,"message":"199","line":1,"column":17,"nodeType":"200","messageId":"201","endLine":1,"endColumn":26},{"ruleId":"210","severity":1,"message":"211","line":24,"column":13,"nodeType":"212","endLine":26,"endColumn":13},{"ruleId":"198","severity":1,"message":"213","line":3,"column":21,"nodeType":"200","messageId":"201","endLine":3,"endColumn":25},{"ruleId":"210","severity":1,"message":"214","line":58,"column":6,"nodeType":"215","endLine":58,"endColumn":8,"suggestions":"216"},{"ruleId":"198","severity":1,"message":"217","line":61,"column":7,"nodeType":"200","messageId":"201","endLine":61,"endColumn":15},{"ruleId":"198","severity":1,"message":"209","line":2,"column":32,"nodeType":"200","messageId":"201","endLine":2,"endColumn":42},{"ruleId":"198","severity":1,"message":"218","line":20,"column":7,"nodeType":"200","messageId":"201","endLine":20,"endColumn":18},"no-native-reassign",["219"],"no-negated-in-lhs",["220"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'clsx' is defined but never used.","'Home' is defined but never used.","'compose' is defined but never used.","'ContactSupportOutlined' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'makeStyles' is defined but never used.","react-hooks/exhaustive-deps","Assignments to the 'timer' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'Line' is defined but never used.","React Hook useEffect has a missing dependency: 'getBlogPosts'. Either include it or remove the dependency array.","ArrayExpression",["221"],"'postRows' is assigned a value but never used.","'drawerWidth' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"222","fix":"223"},"Update the dependencies array to be: [getBlogPosts]",{"range":"224","text":"225"},[1337,1339],"[getBlogPosts]"]