{"ast":null,"code":"var _jsxFileName = \"/Users/lhwn/Documents/workspace/react_career_prj/src/components/Base/Header/Header.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { AppBar, makeStyles } from '@material-ui/core';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Typography from '@material-ui/core/Typography';\nimport Badge from '@material-ui/core/Badge';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport Avatar from '@material-ui/core/Avatar';\nimport clsx from 'clsx';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 240;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex'\n  },\n  toolbar: {\n    paddingRight: 24 // keep right padding when drawer closed\n\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: 36\n  },\n  menuButtonHidden: {\n    display: 'none'\n  },\n  title: {\n    flexGrow: 1\n  }\n}));\n\nconst Header = props => {\n  _s();\n\n  const classes = useStyles();\n  console.log('logged? : ' + props.logged);\n  console.log('loggedInfo? : ' + props.loggedUsername);\n  console.log('loggedThumbnail? : ' + props.loggedThumbnail);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"absolute\",\n      className: clsx(classes.appBar, props.open && classes.appBarShift),\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        className: classes.toolbar,\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          edge: \"start\",\n          color: \"inherit\",\n          \"aria-label\": \"open drawer\",\n          onClick: props.handleDrawerOpen,\n          className: clsx(classes.menuButton, props.open && classes.menuButtonHidden),\n          children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h6\",\n          color: \"inherit\",\n          noWrap: true,\n          className: classes.title,\n          children: \"Miracle Morning, LHWN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"inherit\",\n          children: /*#__PURE__*/_jsxDEV(Badge, {\n            badgeContent: 4,\n            color: \"secondary\",\n            children: /*#__PURE__*/_jsxDEV(NotificationsIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), props.logged ? /*#__PURE__*/_jsxDEV(Avatar, {\n          alt: \"thumbnail\",\n          src: props.loggedThumbnail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this) :\n        /*#__PURE__*/\n        // <img src={thumbnail} alt=\"thumb\"></img>\n        // <div>\n        //   {props.loggedUsername}{' '}\n        //   <div className={classes.loggedIcon} onClick={props.handleLogout}>\n        //     Logout\n        //   </div>\n        // </div>\n        _jsxDEV(IconButton, {\n          color: \"inherit\",\n          component: RouterLink,\n          to: \"/auth\",\n          children: /*#__PURE__*/_jsxDEV(AccountCircleIcon, {\n            style: {\n              cursor: 'pointer'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Header, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Header;\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/Users/lhwn/Documents/workspace/react_career_prj/src/components/Base/Header/Header.js"],"names":["React","AppBar","makeStyles","CssBaseline","Toolbar","IconButton","MenuIcon","Typography","Badge","NotificationsIcon","AccountCircleIcon","Avatar","clsx","Link","RouterLink","drawerWidth","useStyles","theme","root","display","toolbar","paddingRight","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","Header","props","classes","console","log","logged","loggedUsername","loggedThumbnail","open","handleDrawerOpen","cursor"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { AppBar, makeStyles } from '@material-ui/core';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Typography from '@material-ui/core/Typography';\nimport Badge from '@material-ui/core/Badge';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport Avatar from '@material-ui/core/Avatar';\nimport clsx from 'clsx';\nimport { Link as RouterLink } from 'react-router-dom';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex'\n  },\n  toolbar: {\n    paddingRight: 24 // keep right padding when drawer closed\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: 36\n  },\n  menuButtonHidden: {\n    display: 'none'\n  },\n  title: {\n    flexGrow: 1\n  }\n}));\nconst Header = (props) => {\n  const classes = useStyles();\n  console.log('logged? : ' + props.logged);\n  console.log('loggedInfo? : ' + props.loggedUsername);\n  console.log('loggedThumbnail? : ' + props.loggedThumbnail);\n\n  return (\n    <>\n      <CssBaseline />\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, props.open && classes.appBarShift)}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton edge=\"start\" color=\"inherit\" aria-label=\"open drawer\" onClick={props.handleDrawerOpen} className={clsx(classes.menuButton, props.open && classes.menuButtonHidden)}>\n            <MenuIcon />\n          </IconButton>\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n            Miracle Morning, LHWN\n          </Typography>\n          <IconButton color=\"inherit\">\n            <Badge badgeContent={4} color=\"secondary\">\n              <NotificationsIcon />\n            </Badge>\n          </IconButton>\n          {props.logged ? (\n            <Avatar alt=\"thumbnail\" src={props.loggedThumbnail} />\n          ) : (\n            // <img src={thumbnail} alt=\"thumb\"></img>\n            // <div>\n            //   {props.loggedUsername}{' '}\n            //   <div className={classes.loggedIcon} onClick={props.handleLogout}>\n            //     Logout\n            //   </div>\n            // </div>\n            <IconButton color=\"inherit\" component={RouterLink} to=\"/auth\">\n              <AccountCircleIcon style={{ cursor: 'pointer' }}></AccountCircleIcon>\n            </IconButton>\n          )}\n        </Toolbar>\n      </AppBar>\n    </>\n  );\n};\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}