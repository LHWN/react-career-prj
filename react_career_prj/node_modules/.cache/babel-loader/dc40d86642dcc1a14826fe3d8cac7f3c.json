{"ast":null,"code":"'use strict';\n/**\n * Methods for traversing the DOM structure.\n *\n * @module cheerio/traversing\n */\n\nvar select = require('cheerio-select');\n\nvar utils = require('../utils');\n\nvar domEach = utils.domEach;\n\nvar uniqueSort = require('htmlparser2').DomUtils.uniqueSort;\n\nvar isTag = utils.isTag;\nvar slice = Array.prototype.slice;\nvar reSiblingSelector = /^\\s*[~+]/;\n/**\n * Get the descendants of each element in the current set of matched elements,\n * filtered by a selector, jQuery object, or element.\n *\n * @example\n *   $('#fruits').find('li').length;\n *   //=> 3\n *   $('#fruits').find($('.apple')).length;\n *   //=> 1\n *\n * @param {string | Cheerio | Node} selectorOrHaystack - Element to look for.\n * @returns {Cheerio} The found elements.\n * @see {@link https://api.jquery.com/find/}\n */\n\nexports.find = function (selectorOrHaystack) {\n  if (!selectorOrHaystack) {\n    return this._make([]);\n  }\n\n  var context = this.toArray();\n\n  if (typeof selectorOrHaystack !== 'string') {\n    var contains = this.constructor.contains;\n    var haystack = selectorOrHaystack.cheerio ? selectorOrHaystack.get() : [selectorOrHaystack];\n    return this._make(haystack.filter(function (elem) {\n      return context.some(function (node) {\n        return contains(node, elem);\n      });\n    }));\n  }\n\n  var elems = reSiblingSelector.test(selectorOrHaystack) ? context : context.reduce(function (newElems, elem) {\n    return Array.isArray(elem.children) ? newElems.concat(elem.children.filter(isTag)) : newElems;\n  }, []);\n  var options = Object.assign({\n    context: context\n  }, this.options);\n  return this._make(select.select(selectorOrHaystack, elems, options));\n};\n/**\n * Get the parent of each element in the current set of matched elements,\n * optionally filtered by a selector.\n *\n * @example\n *   $('.pear').parent().attr('id');\n *   //=> fruits\n *\n * @param {string} [selector] - If specified filter for parent.\n * @returns {Cheerio} The parents.\n * @see {@link https://api.jquery.com/parent/}\n */\n\n\nexports.parent = function (selector) {\n  var set = [];\n  domEach(this, function (_, elem) {\n    var parentElem = elem.parent;\n\n    if (parentElem && parentElem.type !== 'root' && set.indexOf(parentElem) < 0) {\n      set.push(parentElem);\n    }\n  });\n\n  if (selector) {\n    set = exports.filter.call(set, selector, this);\n  }\n\n  return this._make(set);\n};\n/**\n * Get a set of parents filtered by `selector` of each element in the current\n * set of match elements.\n *\n * @example\n *   $('.orange').parents().length;\n *   // => 2\n *   $('.orange').parents('#fruits').length;\n *   // => 1\n *\n * @param {string} [selector] - If specified filter for parents.\n * @returns {Cheerio} The parents.\n * @see {@link https://api.jquery.com/parents/}\n */\n\n\nexports.parents = function (selector) {\n  var parentNodes = []; // When multiple DOM elements are in the original set, the resulting set will\n  // be in *reverse* order of the original elements as well, with duplicates\n  // removed.\n\n  this.get().reverse().forEach(function (elem) {\n    traverseParents(this, elem.parent, selector, Infinity).forEach(function (node) {\n      if (parentNodes.indexOf(node) === -1) {\n        parentNodes.push(node);\n      }\n    });\n  }, this);\n  return this._make(parentNodes);\n};\n/**\n * Get the ancestors of each element in the current set of matched elements, up\n * to but not including the element matched by the selector, DOM node, or cheerio object.\n *\n * @example\n *   $('.orange').parentsUntil('#food').length;\n *   // => 1\n *\n * @param {string | Node | Cheerio} selector - Selector for element to stop at.\n * @param {string | Function} [filter] - Optional filter for parents.\n * @returns {Cheerio} The parents.\n * @see {@link https://api.jquery.com/parentsUntil/}\n */\n\n\nexports.parentsUntil = function (selector, filter) {\n  var parentNodes = [];\n  var untilNode;\n  var untilNodes;\n\n  if (typeof selector === 'string') {\n    untilNodes = this.parents(selector).toArray();\n  } else if (selector && selector.cheerio) {\n    untilNodes = selector.toArray();\n  } else if (selector) {\n    untilNode = selector;\n  } // When multiple DOM elements are in the original set, the resulting set will\n  // be in *reverse* order of the original elements as well, with duplicates\n  // removed.\n\n\n  this.toArray().reverse().forEach(function (elem) {\n    while (elem = elem.parent) {\n      if (untilNode && elem !== untilNode || untilNodes && untilNodes.indexOf(elem) === -1 || !untilNode && !untilNodes) {\n        if (isTag(elem) && parentNodes.indexOf(elem) === -1) {\n          parentNodes.push(elem);\n        }\n      } else {\n        break;\n      }\n    }\n  }, this);\n  return filter ? exports.filter.call(parentNodes, filter, this) : this._make(parentNodes);\n};\n/**\n * For each element in the set, get the first element that matches the selector\n * by testing the element itself and traversing up through its ancestors in the DOM tree.\n *\n * @example\n *   $('.orange').closest();\n *   // => []\n *   $('.orange').closest('.apple');\n *   // => []\n *   $('.orange').closest('li');\n *   // => [<li class=\"orange\">Orange</li>]\n *   $('.orange').closest('#fruits');\n *   // => [<ul id=\"fruits\"> ... </ul>]\n *\n * @param {string} [selector] - Selector for the element to find.\n * @returns {Cheerio} The closest nodes.\n * @see {@link https://api.jquery.com/closest/}\n */\n\n\nexports.closest = function (selector) {\n  var set = [];\n\n  if (!selector) {\n    return this._make(set);\n  }\n\n  domEach(this, function (_, elem) {\n    var closestElem = traverseParents(this, elem, selector, 1)[0]; // Do not add duplicate elements to the set\n\n    if (closestElem && set.indexOf(closestElem) < 0) {\n      set.push(closestElem);\n    }\n  });\n  return this._make(set);\n};\n/**\n * Gets the next sibling of the first selected element, optionally filtered by a selector.\n *\n * @example\n *   $('.apple').next().hasClass('orange');\n *   //=> true\n *\n * @param {string} [selector] - If specified filter for sibling.\n * @returns {Cheerio} The next nodes.\n * @see {@link https://api.jquery.com/next/}\n */\n\n\nexports.next = function (selector) {\n  if (!this[0]) {\n    return this;\n  }\n\n  var elems = [];\n  domEach(this, function (_, elem) {\n    while (elem = elem.next) {\n      if (isTag(elem)) {\n        elems.push(elem);\n        return;\n      }\n    }\n  });\n  return selector ? exports.filter.call(elems, selector, this) : this._make(elems);\n};\n/**\n * Gets all the following siblings of the first selected element, optionally\n * filtered by a selector.\n *\n * @example\n *   $('.apple').nextAll();\n *   //=> [<li class=\"orange\">Orange</li>, <li class=\"pear\">Pear</li>]\n *   $('.apple').nextAll('.orange');\n *   //=> [<li class=\"orange\">Orange</li>]\n *\n * @param {string} [selector] - If specified filter for siblings.\n * @returns {Cheerio} The next nodes.\n * @see {@link https://api.jquery.com/nextAll/}\n */\n\n\nexports.nextAll = function (selector) {\n  if (!this[0]) {\n    return this;\n  }\n\n  var elems = [];\n  domEach(this, function (_, elem) {\n    while (elem = elem.next) {\n      if (isTag(elem) && elems.indexOf(elem) === -1) {\n        elems.push(elem);\n      }\n    }\n  });\n  return selector ? exports.filter.call(elems, selector, this) : this._make(elems);\n};\n/**\n * Gets all the following siblings up to but not including the element matched\n * by the selector, optionally filtered by another selector.\n *\n * @example\n *   $('.apple').nextUntil('.pear');\n *   //=> [<li class=\"orange\">Orange</li>]\n *\n * @param {string | Cheerio | Node} selector - Selector for element to stop at.\n * @param {string} [filterSelector] - If specified filter for siblings.\n * @returns {Cheerio} The next nodes.\n * @see {@link https://api.jquery.com/nextUntil/}\n */\n\n\nexports.nextUntil = function (selector, filterSelector) {\n  if (!this[0]) {\n    return this;\n  }\n\n  var elems = [];\n  var untilNode;\n  var untilNodes;\n\n  if (typeof selector === 'string') {\n    untilNodes = this.nextAll(selector).toArray();\n  } else if (selector && selector.cheerio) {\n    untilNodes = selector.get();\n  } else if (selector) {\n    untilNode = selector;\n  }\n\n  domEach(this, function (_, elem) {\n    while (elem = elem.next) {\n      if (untilNode && elem !== untilNode || untilNodes && untilNodes.indexOf(elem) === -1 || !untilNode && !untilNodes) {\n        if (isTag(elem) && elems.indexOf(elem) === -1) {\n          elems.push(elem);\n        }\n      } else {\n        break;\n      }\n    }\n  });\n  return filterSelector ? exports.filter.call(elems, filterSelector, this) : this._make(elems);\n};\n/**\n * Gets the previous sibling of the first selected element optionally filtered\n * by a selector.\n *\n * @example\n *   $('.orange').prev().hasClass('apple');\n *   //=> true\n *\n * @param {string} [selector] - If specified filter for siblings.\n * @returns {Cheerio} The previous nodes.\n * @see {@link https://api.jquery.com/prev/}\n */\n\n\nexports.prev = function (selector) {\n  if (!this[0]) {\n    return this;\n  }\n\n  var elems = [];\n  domEach(this, function (_, elem) {\n    while (elem = elem.prev) {\n      if (isTag(elem)) {\n        elems.push(elem);\n        return;\n      }\n    }\n  });\n  return selector ? exports.filter.call(elems, selector, this) : this._make(elems);\n};\n/**\n * Gets all the preceding siblings of the first selected element, optionally\n * filtered by a selector.\n *\n * @example\n *   $('.pear').prevAll();\n *   //=> [<li class=\"orange\">Orange</li>, <li class=\"apple\">Apple</li>]\n *   $('.pear').prevAll('.orange');\n *   //=> [<li class=\"orange\">Orange</li>]\n *\n * @param {string} [selector] - If specified filter for siblings.\n * @returns {Cheerio} The previous nodes.\n * @see {@link https://api.jquery.com/prevAll/}\n */\n\n\nexports.prevAll = function (selector) {\n  if (!this[0]) {\n    return this;\n  }\n\n  var elems = [];\n  domEach(this, function (_, elem) {\n    while (elem = elem.prev) {\n      if (isTag(elem) && elems.indexOf(elem) === -1) {\n        elems.push(elem);\n      }\n    }\n  });\n  return selector ? exports.filter.call(elems, selector, this) : this._make(elems);\n};\n/**\n * Gets all the preceding siblings up to but not including the element matched\n * by the selector, optionally filtered by another selector.\n *\n * @example\n *   $('.pear').prevUntil('.apple');\n *   //=> [<li class=\"orange\">Orange</li>]\n *\n * @param {string | Cheerio | Node} selector - Selector for element to stop at.\n * @param {string} [filterSelector] - If specified filter for siblings.\n * @returns {Cheerio} The previous nodes.\n * @see {@link https://api.jquery.com/prevUntil/}\n */\n\n\nexports.prevUntil = function (selector, filterSelector) {\n  if (!this[0]) {\n    return this;\n  }\n\n  var elems = [];\n  var untilNode;\n  var untilNodes;\n\n  if (typeof selector === 'string') {\n    untilNodes = this.prevAll(selector).toArray();\n  } else if (selector && selector.cheerio) {\n    untilNodes = selector.get();\n  } else if (selector) {\n    untilNode = selector;\n  }\n\n  domEach(this, function (_, elem) {\n    while (elem = elem.prev) {\n      if (untilNode && elem !== untilNode || untilNodes && untilNodes.indexOf(elem) === -1 || !untilNode && !untilNodes) {\n        if (isTag(elem) && elems.indexOf(elem) === -1) {\n          elems.push(elem);\n        }\n      } else {\n        break;\n      }\n    }\n  });\n  return filterSelector ? exports.filter.call(elems, filterSelector, this) : this._make(elems);\n};\n/**\n * Gets the first selected element's siblings, excluding itself.\n *\n * @example\n *   $('.pear').siblings().length;\n *   //=> 2\n *\n *   $('.pear').siblings('.orange').length;\n *   //=> 1\n *\n * @param {string} [selector] - If specified filter for siblings.\n * @returns {Cheerio} The siblings.\n * @see {@link https://api.jquery.com/siblings/}\n */\n\n\nexports.siblings = function (selector) {\n  var parent = this.parent();\n  var elems = (parent ? parent.children() : this.siblingsAndMe()).toArray().filter(function (elem) {\n    return isTag(elem) && !this.is(elem);\n  }, this);\n\n  if (selector !== undefined) {\n    return exports.filter.call(elems, selector, this);\n  }\n\n  return this._make(elems);\n};\n/**\n * Gets the children of the first selected element.\n *\n * @example\n *   $('#fruits').children().length;\n *   //=> 3\n *\n *   $('#fruits').children('.pear').text();\n *   //=> Pear\n *\n * @param {string} [selector] - If specified filter for children.\n * @returns {Cheerio} The children.\n * @see {@link https://api.jquery.com/children/}\n */\n\n\nexports.children = function (selector) {\n  var elems = this.toArray().reduce(function (newElems, elem) {\n    return newElems.concat(elem.children.filter(isTag));\n  }, []);\n  if (selector === undefined) return this._make(elems);\n  return exports.filter.call(elems, selector, this);\n};\n/**\n * Gets the children of each element in the set of matched elements, including\n * text and comment nodes.\n *\n * @example\n *   $('#fruits').contents().length;\n *   //=> 3\n *\n * @returns {Cheerio} The children.\n * @see {@link https://api.jquery.com/contents/}\n */\n\n\nexports.contents = function () {\n  var elems = this.toArray().reduce(function (newElems, elem) {\n    return newElems.concat(elem.children);\n  }, []);\n  return this._make(elems);\n};\n/**\n * Iterates over a cheerio object, executing a function for each matched\n * element. When the callback is fired, the function is fired in the context of\n * the DOM element, so `this` refers to the current element, which is equivalent\n * to the function parameter `element`. To break out of the `each` loop early,\n * return with `false`.\n *\n * @example\n *   const fruits = [];\n *\n *   $('li').each(function (i, elem) {\n *     fruits[i] = $(this).text();\n *   });\n *\n *   fruits.join(', ');\n *   //=> Apple, Orange, Pear\n *\n * @param {Function} fn - Function to execute.\n * @returns {Cheerio} The instance itself, useful for chaining.\n * @see {@link https://api.jquery.com/each/}\n */\n\n\nexports.each = function (fn) {\n  var i = 0;\n  var len = this.length;\n\n  while (i < len && fn.call(this[i], i, this[i]) !== false) ++i;\n\n  return this;\n};\n/**\n * Pass each element in the current matched set through a function, producing a\n * new Cheerio object containing the return values. The function can return an\n * individual data item or an array of data items to be inserted into the\n * resulting set. If an array is returned, the elements inside the array are\n * inserted into the set. If the function returns null or undefined, no element\n * will be inserted.\n *\n * @example\n *   $('li')\n *     .map(function (i, el) {\n *       // this === el\n *       return $(this).text();\n *     })\n *     .get()\n *     .join(' ');\n *   //=> \"apple orange pear\"\n *\n * @param {Function} fn - Function to execute.\n * @returns {Cheerio} The mapped elements, wrapped in a Cheerio collection.\n * @see {@link https://api.jquery.com/map/}\n */\n\n\nexports.map = function (fn) {\n  var elems = [];\n\n  for (var i = 0; i < this.length; i++) {\n    var el = this[i];\n    var val = fn.call(el, i, el);\n\n    if (val != null) {\n      elems = elems.concat(val);\n    }\n  }\n\n  return this._make(elems);\n};\n\nfunction getFilterFn(match) {\n  if (typeof match === 'function') {\n    return function (el, i) {\n      return match.call(el, i, el);\n    };\n  }\n\n  if (match.cheerio) {\n    return match.is.bind(match);\n  }\n\n  return function (el) {\n    return match === el;\n  };\n}\n/**\n * Iterates over a cheerio object, reducing the set of selector elements to\n * those that match the selector or pass the function's test. When a Cheerio\n * selection is specified, return only the elements contained in that selection.\n * When an element is specified, return only that element (if it is contained in\n * the original selection). If using the function method, the function is\n * executed in the context of the selected element, so `this` refers to the\n * current element.\n *\n * @example <caption>Selector</caption>\n *   $('li').filter('.orange').attr('class');\n *   //=> orange\n *\n * @example <caption>Function</caption>\n *   $('li')\n *     .filter(function (i, el) {\n *       // this === el\n *       return $(this).attr('class') === 'orange';\n *     })\n *     .attr('class');\n *   //=> orange\n *\n * @function\n * @param {string | Function} match - Value to look for, following the rules above.\n * @param {Cheerio} [container] - Optional node to filter instead.\n * @returns {Cheerio} The filtered collection.\n * @see {@link https://api.jquery.com/filter/}\n */\n\n\nexports.filter = function (match, container) {\n  container = container || this;\n  var elements = this.toArray ? this.toArray() : this;\n  elements = typeof match === 'string' ? select.filter(match, elements, container.options) : elements.filter(getFilterFn(match));\n  return container._make(elements);\n};\n/**\n * Remove elements from the set of matched elements. Given a jQuery object that\n * represents a set of DOM elements, the `.not()` method constructs a new jQuery\n * object from a subset of the matching elements. The supplied selector is\n * tested against each element; the elements that don't match the selector will\n * be included in the result. The `.not()` method can take a function as its\n * argument in the same way that `.filter()` does. Elements for which the\n * function returns true are excluded from the filtered set; all other elements\n * are included.\n *\n * @example <caption>Selector</caption>\n *   $('li').not('.apple').length;\n *   //=> 2\n *\n * @example <caption>Function</caption>\n *   $('li').not(function (i, el) {\n *     // this === el\n *     return $(this).attr('class') === 'orange';\n *   }).length;\n *   //=> 2\n *\n * @function\n * @param {string | Function} match - Value to look for, following the rules above.\n * @param {Node[] | Cheerio} [container] - Optional node to filter instead.\n * @returns {Cheerio} The filtered collection.\n * @see {@link https://api.jquery.com/not/}\n */\n\n\nexports.not = function (match, container) {\n  container = container || this;\n  var elements = container.toArray ? container.toArray() : container;\n\n  if (typeof match === 'string') {\n    var matches = new Set(select.filter(match, elements, this.options));\n    elements = elements.filter(function (el) {\n      return !matches.has(el);\n    });\n  } else {\n    var filterFn = getFilterFn(match);\n    elements = elements.filter(function (el, i) {\n      return !filterFn(el, i);\n    });\n  }\n\n  return container._make(elements);\n};\n/**\n * Filters the set of matched elements to only those which have the given DOM\n * element as a descendant or which have a descendant that matches the given\n * selector. Equivalent to `.filter(':has(selector)')`.\n *\n * @example <caption>Selector</caption>\n *   $('ul').has('.pear').attr('id');\n *   //=> fruits\n *\n * @example <caption>Element</caption>\n *   $('ul').has($('.pear')[0]).attr('id');\n *   //=> fruits\n *\n * @param {string | Cheerio | Node} selectorOrHaystack - Element to look for.\n * @returns {Cheerio} The filtered collection.\n * @see {@link https://api.jquery.com/has/}\n */\n\n\nexports.has = function (selectorOrHaystack) {\n  var that = this;\n  return exports.filter.call(this, function (_, el) {\n    return that._make(el).find(selectorOrHaystack).length > 0;\n  });\n};\n/**\n * Will select the first element of a cheerio object.\n *\n * @example\n *   $('#fruits').children().first().text();\n *   //=> Apple\n *\n * @returns {Cheerio} The first element.\n * @see {@link https://api.jquery.com/first/}\n */\n\n\nexports.first = function () {\n  return this.length > 1 ? this._make(this[0]) : this;\n};\n/**\n * Will select the last element of a cheerio object.\n *\n * @example\n *   $('#fruits').children().last().text();\n *   //=> Pear\n *\n * @returns {Cheerio} The last element.\n * @see {@link https://api.jquery.com/last/}\n */\n\n\nexports.last = function () {\n  return this.length > 1 ? this._make(this[this.length - 1]) : this;\n};\n/**\n * Reduce the set of matched elements to the one at the specified index. Use\n * `.eq(-i)` to count backwards from the last selected element.\n *\n * @example\n *   $('li').eq(0).text();\n *   //=> Apple\n *\n *   $('li').eq(-1).text();\n *   //=> Pear\n *\n * @param {number} i - Index of the element to select.\n * @returns {Cheerio} The element at the `i`th position.\n * @see {@link https://api.jquery.com/eq/}\n */\n\n\nexports.eq = function (i) {\n  i = +i; // Use the first identity optimization if possible\n\n  if (i === 0 && this.length <= 1) return this;\n  if (i < 0) i = this.length + i;\n  return this[i] ? this._make(this[i]) : this._make([]);\n};\n/**\n * Retrieve the DOM elements matched by the Cheerio object. If an index is\n * specified, retrieve one of the elements matched by the Cheerio object.\n *\n * @example\n *   $('li').get(0).tagName\n *   //=> li\n *\n *   If no index is specified, retrieve all elements matched by the Cheerio object:\n *\n * @example\n *   $('li').get().length;\n *   //=> 3\n *\n * @param {number} [i] - Element to retrieve.\n * @returns {Node} The node at the `i`th position.\n * @see {@link https://api.jquery.com/get/}\n */\n\n\nexports.get = function (i) {\n  if (i == null) {\n    return slice.call(this);\n  }\n\n  return this[i < 0 ? this.length + i : i];\n};\n/**\n * Search for a given element from among the matched elements.\n *\n * @example\n *   $('.pear').index();\n *   //=> 2\n *   $('.orange').index('li');\n *   //=> 1\n *   $('.apple').index($('#fruit, li'));\n *   //=> 1\n *\n * @param {string | Cheerio | Node} [selectorOrNeedle] - Element to look for.\n * @returns {number} The index of the element.\n * @see {@link https://api.jquery.com/index/}\n */\n\n\nexports.index = function (selectorOrNeedle) {\n  var $haystack;\n  var needle;\n\n  if (arguments.length === 0) {\n    $haystack = this.parent().children();\n    needle = this[0];\n  } else if (typeof selectorOrNeedle === 'string') {\n    $haystack = this._make(selectorOrNeedle);\n    needle = this[0];\n  } else {\n    $haystack = this;\n    needle = selectorOrNeedle.cheerio ? selectorOrNeedle[0] : selectorOrNeedle;\n  }\n\n  return $haystack.get().indexOf(needle);\n};\n/**\n * Gets the elements matching the specified range (0-based position).\n *\n * @example\n *   $('li').slice(1).eq(0).text();\n *   //=> 'Orange'\n *\n *   $('li').slice(1, 2).length;\n *   //=> 1\n *\n * @param {number} [start] - An position at which the elements begin to be\n *   selected. If negative, it indicates an offset from the end of the set.\n * @param {number} [end] - An position at which the elements stop being\n *   selected. If negative, it indicates an offset from the end of the set. If\n *   omitted, the range continues until the end of the set.\n * @returns {Cheerio} The elements matching the specified range.\n * @see {@link https://api.jquery.com/slice/}\n */\n\n\nexports.slice = function (start, end) {\n  return this._make(slice.call(this, start, end));\n};\n\nfunction traverseParents(self, elem, selector, limit) {\n  var elems = [];\n\n  while (elem && elems.length < limit && elem.type !== 'root') {\n    if (!selector || exports.filter.call([elem], selector, self).length) {\n      elems.push(elem);\n    }\n\n    elem = elem.parent;\n  }\n\n  return elems;\n}\n/**\n * End the most recent filtering operation in the current chain and return the\n * set of matched elements to its previous state.\n *\n * @example\n *   $('li').eq(0).end().length;\n *   //=> 3\n *\n * @returns {Cheerio} The previous state of the set of matched elements.\n * @see {@link https://api.jquery.com/end/}\n */\n\n\nexports.end = function () {\n  return this.prevObject || this._make([]);\n};\n/**\n * Add elements to the set of matched elements.\n *\n * @example\n *   $('.apple').add('.orange').length;\n *   //=> 2\n *\n * @param {string | Cheerio} other - Elements to add.\n * @param {Cheerio} [context] - Optionally the context of the new selection.\n * @returns {Cheerio} The combined set.\n * @see {@link https://api.jquery.com/add/}\n */\n\n\nexports.add = function (other, context) {\n  var selection = this._make(other, context);\n\n  var contents = uniqueSort(this.get().concat(selection.get()));\n  return this._make(contents);\n};\n/**\n * Add the previous set of elements on the stack to the current set, optionally\n * filtered by a selector.\n *\n * @example\n *   $('li').eq(0).addBack('.orange').length;\n *   //=> 2\n *\n * @param {string} selector - Selector for the elements to add.\n * @returns {Cheerio} The combined set.\n * @see {@link https://api.jquery.com/addBack/}\n */\n\n\nexports.addBack = function (selector) {\n  return this.add(arguments.length ? this.prevObject.filter(selector) : this.prevObject);\n};","map":{"version":3,"sources":["/Users/lhwn/Documents/workspace/react_career_prj/node_modules/cheerio/lib/api/traversing.js"],"names":["select","require","utils","domEach","uniqueSort","DomUtils","isTag","slice","Array","prototype","reSiblingSelector","exports","find","selectorOrHaystack","_make","context","toArray","contains","constructor","haystack","cheerio","get","filter","elem","some","node","elems","test","reduce","newElems","isArray","children","concat","options","Object","assign","parent","selector","set","_","parentElem","type","indexOf","push","call","parents","parentNodes","reverse","forEach","traverseParents","Infinity","parentsUntil","untilNode","untilNodes","closest","closestElem","next","nextAll","nextUntil","filterSelector","prev","prevAll","prevUntil","siblings","siblingsAndMe","is","undefined","contents","each","fn","i","len","length","map","el","val","getFilterFn","match","bind","container","elements","not","matches","Set","has","filterFn","that","first","last","eq","index","selectorOrNeedle","$haystack","needle","arguments","start","end","self","limit","prevObject","add","other","selection","addBack"],"mappings":"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","sourcesContent":["'use strict';\n/**\n * Methods for traversing the DOM structure.\n *\n * @module cheerio/traversing\n */\n\nvar select = require('cheerio-select');\nvar utils = require('../utils');\nvar domEach = utils.domEach;\nvar uniqueSort = require('htmlparser2').DomUtils.uniqueSort;\nvar isTag = utils.isTag;\nvar slice = Array.prototype.slice;\nvar reSiblingSelector = /^\\s*[~+]/;\n\n/**\n * Get the descendants of each element in the current set of matched elements,\n * filtered by a selector, jQuery object, or element.\n *\n * @example\n *   $('#fruits').find('li').length;\n *   //=> 3\n *   $('#fruits').find($('.apple')).length;\n *   //=> 1\n *\n * @param {string | Cheerio | Node} selectorOrHaystack - Element to look for.\n * @returns {Cheerio} The found elements.\n * @see {@link https://api.jquery.com/find/}\n */\nexports.find = function (selectorOrHaystack) {\n  if (!selectorOrHaystack) {\n    return this._make([]);\n  }\n\n  var context = this.toArray();\n\n  if (typeof selectorOrHaystack !== 'string') {\n    var contains = this.constructor.contains;\n    var haystack = selectorOrHaystack.cheerio\n      ? selectorOrHaystack.get()\n      : [selectorOrHaystack];\n\n    return this._make(\n      haystack.filter(function (elem) {\n        return context.some(function (node) {\n          return contains(node, elem);\n        });\n      })\n    );\n  }\n\n  var elems = reSiblingSelector.test(selectorOrHaystack)\n    ? context\n    : context.reduce(function (newElems, elem) {\n        return Array.isArray(elem.children)\n          ? newElems.concat(elem.children.filter(isTag))\n          : newElems;\n      }, []);\n\n  var options = Object.assign({ context: context }, this.options);\n\n  return this._make(select.select(selectorOrHaystack, elems, options));\n};\n\n/**\n * Get the parent of each element in the current set of matched elements,\n * optionally filtered by a selector.\n *\n * @example\n *   $('.pear').parent().attr('id');\n *   //=> fruits\n *\n * @param {string} [selector] - If specified filter for parent.\n * @returns {Cheerio} The parents.\n * @see {@link https://api.jquery.com/parent/}\n */\nexports.parent = function (selector) {\n  var set = [];\n\n  domEach(this, function (_, elem) {\n    var parentElem = elem.parent;\n    if (\n      parentElem &&\n      parentElem.type !== 'root' &&\n      set.indexOf(parentElem) < 0\n    ) {\n      set.push(parentElem);\n    }\n  });\n\n  if (selector) {\n    set = exports.filter.call(set, selector, this);\n  }\n\n  return this._make(set);\n};\n\n/**\n * Get a set of parents filtered by `selector` of each element in the current\n * set of match elements.\n *\n * @example\n *   $('.orange').parents().length;\n *   // => 2\n *   $('.orange').parents('#fruits').length;\n *   // => 1\n *\n * @param {string} [selector] - If specified filter for parents.\n * @returns {Cheerio} The parents.\n * @see {@link https://api.jquery.com/parents/}\n */\nexports.parents = function (selector) {\n  var parentNodes = [];\n\n  // When multiple DOM elements are in the original set, the resulting set will\n  // be in *reverse* order of the original elements as well, with duplicates\n  // removed.\n  this.get()\n    .reverse()\n    .forEach(function (elem) {\n      traverseParents(this, elem.parent, selector, Infinity).forEach(function (\n        node\n      ) {\n        if (parentNodes.indexOf(node) === -1) {\n          parentNodes.push(node);\n        }\n      });\n    }, this);\n\n  return this._make(parentNodes);\n};\n\n/**\n * Get the ancestors of each element in the current set of matched elements, up\n * to but not including the element matched by the selector, DOM node, or cheerio object.\n *\n * @example\n *   $('.orange').parentsUntil('#food').length;\n *   // => 1\n *\n * @param {string | Node | Cheerio} selector - Selector for element to stop at.\n * @param {string | Function} [filter] - Optional filter for parents.\n * @returns {Cheerio} The parents.\n * @see {@link https://api.jquery.com/parentsUntil/}\n */\nexports.parentsUntil = function (selector, filter) {\n  var parentNodes = [];\n  var untilNode;\n  var untilNodes;\n\n  if (typeof selector === 'string') {\n    untilNodes = this.parents(selector).toArray();\n  } else if (selector && selector.cheerio) {\n    untilNodes = selector.toArray();\n  } else if (selector) {\n    untilNode = selector;\n  }\n\n  // When multiple DOM elements are in the original set, the resulting set will\n  // be in *reverse* order of the original elements as well, with duplicates\n  // removed.\n\n  this.toArray()\n    .reverse()\n    .forEach(function (elem) {\n      while ((elem = elem.parent)) {\n        if (\n          (untilNode && elem !== untilNode) ||\n          (untilNodes && untilNodes.indexOf(elem) === -1) ||\n          (!untilNode && !untilNodes)\n        ) {\n          if (isTag(elem) && parentNodes.indexOf(elem) === -1) {\n            parentNodes.push(elem);\n          }\n        } else {\n          break;\n        }\n      }\n    }, this);\n\n  return filter\n    ? exports.filter.call(parentNodes, filter, this)\n    : this._make(parentNodes);\n};\n\n/**\n * For each element in the set, get the first element that matches the selector\n * by testing the element itself and traversing up through its ancestors in the DOM tree.\n *\n * @example\n *   $('.orange').closest();\n *   // => []\n *   $('.orange').closest('.apple');\n *   // => []\n *   $('.orange').closest('li');\n *   // => [<li class=\"orange\">Orange</li>]\n *   $('.orange').closest('#fruits');\n *   // => [<ul id=\"fruits\"> ... </ul>]\n *\n * @param {string} [selector] - Selector for the element to find.\n * @returns {Cheerio} The closest nodes.\n * @see {@link https://api.jquery.com/closest/}\n */\nexports.closest = function (selector) {\n  var set = [];\n\n  if (!selector) {\n    return this._make(set);\n  }\n\n  domEach(this, function (_, elem) {\n    var closestElem = traverseParents(this, elem, selector, 1)[0];\n\n    // Do not add duplicate elements to the set\n    if (closestElem && set.indexOf(closestElem) < 0) {\n      set.push(closestElem);\n    }\n  });\n\n  return this._make(set);\n};\n\n/**\n * Gets the next sibling of the first selected element, optionally filtered by a selector.\n *\n * @example\n *   $('.apple').next().hasClass('orange');\n *   //=> true\n *\n * @param {string} [selector] - If specified filter for sibling.\n * @returns {Cheerio} The next nodes.\n * @see {@link https://api.jquery.com/next/}\n */\nexports.next = function (selector) {\n  if (!this[0]) {\n    return this;\n  }\n  var elems = [];\n\n  domEach(this, function (_, elem) {\n    while ((elem = elem.next)) {\n      if (isTag(elem)) {\n        elems.push(elem);\n        return;\n      }\n    }\n  });\n\n  return selector\n    ? exports.filter.call(elems, selector, this)\n    : this._make(elems);\n};\n\n/**\n * Gets all the following siblings of the first selected element, optionally\n * filtered by a selector.\n *\n * @example\n *   $('.apple').nextAll();\n *   //=> [<li class=\"orange\">Orange</li>, <li class=\"pear\">Pear</li>]\n *   $('.apple').nextAll('.orange');\n *   //=> [<li class=\"orange\">Orange</li>]\n *\n * @param {string} [selector] - If specified filter for siblings.\n * @returns {Cheerio} The next nodes.\n * @see {@link https://api.jquery.com/nextAll/}\n */\nexports.nextAll = function (selector) {\n  if (!this[0]) {\n    return this;\n  }\n  var elems = [];\n\n  domEach(this, function (_, elem) {\n    while ((elem = elem.next)) {\n      if (isTag(elem) && elems.indexOf(elem) === -1) {\n        elems.push(elem);\n      }\n    }\n  });\n\n  return selector\n    ? exports.filter.call(elems, selector, this)\n    : this._make(elems);\n};\n\n/**\n * Gets all the following siblings up to but not including the element matched\n * by the selector, optionally filtered by another selector.\n *\n * @example\n *   $('.apple').nextUntil('.pear');\n *   //=> [<li class=\"orange\">Orange</li>]\n *\n * @param {string | Cheerio | Node} selector - Selector for element to stop at.\n * @param {string} [filterSelector] - If specified filter for siblings.\n * @returns {Cheerio} The next nodes.\n * @see {@link https://api.jquery.com/nextUntil/}\n */\nexports.nextUntil = function (selector, filterSelector) {\n  if (!this[0]) {\n    return this;\n  }\n  var elems = [];\n  var untilNode;\n  var untilNodes;\n\n  if (typeof selector === 'string') {\n    untilNodes = this.nextAll(selector).toArray();\n  } else if (selector && selector.cheerio) {\n    untilNodes = selector.get();\n  } else if (selector) {\n    untilNode = selector;\n  }\n\n  domEach(this, function (_, elem) {\n    while ((elem = elem.next)) {\n      if (\n        (untilNode && elem !== untilNode) ||\n        (untilNodes && untilNodes.indexOf(elem) === -1) ||\n        (!untilNode && !untilNodes)\n      ) {\n        if (isTag(elem) && elems.indexOf(elem) === -1) {\n          elems.push(elem);\n        }\n      } else {\n        break;\n      }\n    }\n  });\n\n  return filterSelector\n    ? exports.filter.call(elems, filterSelector, this)\n    : this._make(elems);\n};\n\n/**\n * Gets the previous sibling of the first selected element optionally filtered\n * by a selector.\n *\n * @example\n *   $('.orange').prev().hasClass('apple');\n *   //=> true\n *\n * @param {string} [selector] - If specified filter for siblings.\n * @returns {Cheerio} The previous nodes.\n * @see {@link https://api.jquery.com/prev/}\n */\nexports.prev = function (selector) {\n  if (!this[0]) {\n    return this;\n  }\n  var elems = [];\n\n  domEach(this, function (_, elem) {\n    while ((elem = elem.prev)) {\n      if (isTag(elem)) {\n        elems.push(elem);\n        return;\n      }\n    }\n  });\n\n  return selector\n    ? exports.filter.call(elems, selector, this)\n    : this._make(elems);\n};\n\n/**\n * Gets all the preceding siblings of the first selected element, optionally\n * filtered by a selector.\n *\n * @example\n *   $('.pear').prevAll();\n *   //=> [<li class=\"orange\">Orange</li>, <li class=\"apple\">Apple</li>]\n *   $('.pear').prevAll('.orange');\n *   //=> [<li class=\"orange\">Orange</li>]\n *\n * @param {string} [selector] - If specified filter for siblings.\n * @returns {Cheerio} The previous nodes.\n * @see {@link https://api.jquery.com/prevAll/}\n */\nexports.prevAll = function (selector) {\n  if (!this[0]) {\n    return this;\n  }\n  var elems = [];\n\n  domEach(this, function (_, elem) {\n    while ((elem = elem.prev)) {\n      if (isTag(elem) && elems.indexOf(elem) === -1) {\n        elems.push(elem);\n      }\n    }\n  });\n\n  return selector\n    ? exports.filter.call(elems, selector, this)\n    : this._make(elems);\n};\n\n/**\n * Gets all the preceding siblings up to but not including the element matched\n * by the selector, optionally filtered by another selector.\n *\n * @example\n *   $('.pear').prevUntil('.apple');\n *   //=> [<li class=\"orange\">Orange</li>]\n *\n * @param {string | Cheerio | Node} selector - Selector for element to stop at.\n * @param {string} [filterSelector] - If specified filter for siblings.\n * @returns {Cheerio} The previous nodes.\n * @see {@link https://api.jquery.com/prevUntil/}\n */\nexports.prevUntil = function (selector, filterSelector) {\n  if (!this[0]) {\n    return this;\n  }\n  var elems = [];\n  var untilNode;\n  var untilNodes;\n\n  if (typeof selector === 'string') {\n    untilNodes = this.prevAll(selector).toArray();\n  } else if (selector && selector.cheerio) {\n    untilNodes = selector.get();\n  } else if (selector) {\n    untilNode = selector;\n  }\n\n  domEach(this, function (_, elem) {\n    while ((elem = elem.prev)) {\n      if (\n        (untilNode && elem !== untilNode) ||\n        (untilNodes && untilNodes.indexOf(elem) === -1) ||\n        (!untilNode && !untilNodes)\n      ) {\n        if (isTag(elem) && elems.indexOf(elem) === -1) {\n          elems.push(elem);\n        }\n      } else {\n        break;\n      }\n    }\n  });\n\n  return filterSelector\n    ? exports.filter.call(elems, filterSelector, this)\n    : this._make(elems);\n};\n\n/**\n * Gets the first selected element's siblings, excluding itself.\n *\n * @example\n *   $('.pear').siblings().length;\n *   //=> 2\n *\n *   $('.pear').siblings('.orange').length;\n *   //=> 1\n *\n * @param {string} [selector] - If specified filter for siblings.\n * @returns {Cheerio} The siblings.\n * @see {@link https://api.jquery.com/siblings/}\n */\nexports.siblings = function (selector) {\n  var parent = this.parent();\n\n  var elems = (parent ? parent.children() : this.siblingsAndMe())\n    .toArray()\n    .filter(function (elem) {\n      return isTag(elem) && !this.is(elem);\n    }, this);\n\n  if (selector !== undefined) {\n    return exports.filter.call(elems, selector, this);\n  }\n  return this._make(elems);\n};\n\n/**\n * Gets the children of the first selected element.\n *\n * @example\n *   $('#fruits').children().length;\n *   //=> 3\n *\n *   $('#fruits').children('.pear').text();\n *   //=> Pear\n *\n * @param {string} [selector] - If specified filter for children.\n * @returns {Cheerio} The children.\n * @see {@link https://api.jquery.com/children/}\n */\nexports.children = function (selector) {\n  var elems = this.toArray().reduce(function (newElems, elem) {\n    return newElems.concat(elem.children.filter(isTag));\n  }, []);\n\n  if (selector === undefined) return this._make(elems);\n\n  return exports.filter.call(elems, selector, this);\n};\n\n/**\n * Gets the children of each element in the set of matched elements, including\n * text and comment nodes.\n *\n * @example\n *   $('#fruits').contents().length;\n *   //=> 3\n *\n * @returns {Cheerio} The children.\n * @see {@link https://api.jquery.com/contents/}\n */\nexports.contents = function () {\n  var elems = this.toArray().reduce(function (newElems, elem) {\n    return newElems.concat(elem.children);\n  }, []);\n  return this._make(elems);\n};\n\n/**\n * Iterates over a cheerio object, executing a function for each matched\n * element. When the callback is fired, the function is fired in the context of\n * the DOM element, so `this` refers to the current element, which is equivalent\n * to the function parameter `element`. To break out of the `each` loop early,\n * return with `false`.\n *\n * @example\n *   const fruits = [];\n *\n *   $('li').each(function (i, elem) {\n *     fruits[i] = $(this).text();\n *   });\n *\n *   fruits.join(', ');\n *   //=> Apple, Orange, Pear\n *\n * @param {Function} fn - Function to execute.\n * @returns {Cheerio} The instance itself, useful for chaining.\n * @see {@link https://api.jquery.com/each/}\n */\nexports.each = function (fn) {\n  var i = 0;\n  var len = this.length;\n  while (i < len && fn.call(this[i], i, this[i]) !== false) ++i;\n  return this;\n};\n\n/**\n * Pass each element in the current matched set through a function, producing a\n * new Cheerio object containing the return values. The function can return an\n * individual data item or an array of data items to be inserted into the\n * resulting set. If an array is returned, the elements inside the array are\n * inserted into the set. If the function returns null or undefined, no element\n * will be inserted.\n *\n * @example\n *   $('li')\n *     .map(function (i, el) {\n *       // this === el\n *       return $(this).text();\n *     })\n *     .get()\n *     .join(' ');\n *   //=> \"apple orange pear\"\n *\n * @param {Function} fn - Function to execute.\n * @returns {Cheerio} The mapped elements, wrapped in a Cheerio collection.\n * @see {@link https://api.jquery.com/map/}\n */\nexports.map = function (fn) {\n  var elems = [];\n  for (var i = 0; i < this.length; i++) {\n    var el = this[i];\n    var val = fn.call(el, i, el);\n    if (val != null) {\n      elems = elems.concat(val);\n    }\n  }\n  return this._make(elems);\n};\n\nfunction getFilterFn(match) {\n  if (typeof match === 'function') {\n    return function (el, i) {\n      return match.call(el, i, el);\n    };\n  }\n  if (match.cheerio) {\n    return match.is.bind(match);\n  }\n  return function (el) {\n    return match === el;\n  };\n}\n\n/**\n * Iterates over a cheerio object, reducing the set of selector elements to\n * those that match the selector or pass the function's test. When a Cheerio\n * selection is specified, return only the elements contained in that selection.\n * When an element is specified, return only that element (if it is contained in\n * the original selection). If using the function method, the function is\n * executed in the context of the selected element, so `this` refers to the\n * current element.\n *\n * @example <caption>Selector</caption>\n *   $('li').filter('.orange').attr('class');\n *   //=> orange\n *\n * @example <caption>Function</caption>\n *   $('li')\n *     .filter(function (i, el) {\n *       // this === el\n *       return $(this).attr('class') === 'orange';\n *     })\n *     .attr('class');\n *   //=> orange\n *\n * @function\n * @param {string | Function} match - Value to look for, following the rules above.\n * @param {Cheerio} [container] - Optional node to filter instead.\n * @returns {Cheerio} The filtered collection.\n * @see {@link https://api.jquery.com/filter/}\n */\nexports.filter = function (match, container) {\n  container = container || this;\n  var elements = this.toArray ? this.toArray() : this;\n\n  elements =\n    typeof match === 'string'\n      ? select.filter(match, elements, container.options)\n      : elements.filter(getFilterFn(match));\n\n  return container._make(elements);\n};\n\n/**\n * Remove elements from the set of matched elements. Given a jQuery object that\n * represents a set of DOM elements, the `.not()` method constructs a new jQuery\n * object from a subset of the matching elements. The supplied selector is\n * tested against each element; the elements that don't match the selector will\n * be included in the result. The `.not()` method can take a function as its\n * argument in the same way that `.filter()` does. Elements for which the\n * function returns true are excluded from the filtered set; all other elements\n * are included.\n *\n * @example <caption>Selector</caption>\n *   $('li').not('.apple').length;\n *   //=> 2\n *\n * @example <caption>Function</caption>\n *   $('li').not(function (i, el) {\n *     // this === el\n *     return $(this).attr('class') === 'orange';\n *   }).length;\n *   //=> 2\n *\n * @function\n * @param {string | Function} match - Value to look for, following the rules above.\n * @param {Node[] | Cheerio} [container] - Optional node to filter instead.\n * @returns {Cheerio} The filtered collection.\n * @see {@link https://api.jquery.com/not/}\n */\nexports.not = function (match, container) {\n  container = container || this;\n  var elements = container.toArray ? container.toArray() : container;\n\n  if (typeof match === 'string') {\n    var matches = new Set(select.filter(match, elements, this.options));\n    elements = elements.filter(function (el) {\n      return !matches.has(el);\n    });\n  } else {\n    var filterFn = getFilterFn(match);\n    elements = elements.filter(function (el, i) {\n      return !filterFn(el, i);\n    });\n  }\n\n  return container._make(elements);\n};\n\n/**\n * Filters the set of matched elements to only those which have the given DOM\n * element as a descendant or which have a descendant that matches the given\n * selector. Equivalent to `.filter(':has(selector)')`.\n *\n * @example <caption>Selector</caption>\n *   $('ul').has('.pear').attr('id');\n *   //=> fruits\n *\n * @example <caption>Element</caption>\n *   $('ul').has($('.pear')[0]).attr('id');\n *   //=> fruits\n *\n * @param {string | Cheerio | Node} selectorOrHaystack - Element to look for.\n * @returns {Cheerio} The filtered collection.\n * @see {@link https://api.jquery.com/has/}\n */\nexports.has = function (selectorOrHaystack) {\n  var that = this;\n  return exports.filter.call(this, function (_, el) {\n    return that._make(el).find(selectorOrHaystack).length > 0;\n  });\n};\n\n/**\n * Will select the first element of a cheerio object.\n *\n * @example\n *   $('#fruits').children().first().text();\n *   //=> Apple\n *\n * @returns {Cheerio} The first element.\n * @see {@link https://api.jquery.com/first/}\n */\nexports.first = function () {\n  return this.length > 1 ? this._make(this[0]) : this;\n};\n\n/**\n * Will select the last element of a cheerio object.\n *\n * @example\n *   $('#fruits').children().last().text();\n *   //=> Pear\n *\n * @returns {Cheerio} The last element.\n * @see {@link https://api.jquery.com/last/}\n */\nexports.last = function () {\n  return this.length > 1 ? this._make(this[this.length - 1]) : this;\n};\n\n/**\n * Reduce the set of matched elements to the one at the specified index. Use\n * `.eq(-i)` to count backwards from the last selected element.\n *\n * @example\n *   $('li').eq(0).text();\n *   //=> Apple\n *\n *   $('li').eq(-1).text();\n *   //=> Pear\n *\n * @param {number} i - Index of the element to select.\n * @returns {Cheerio} The element at the `i`th position.\n * @see {@link https://api.jquery.com/eq/}\n */\nexports.eq = function (i) {\n  i = +i;\n\n  // Use the first identity optimization if possible\n  if (i === 0 && this.length <= 1) return this;\n\n  if (i < 0) i = this.length + i;\n  return this[i] ? this._make(this[i]) : this._make([]);\n};\n\n/**\n * Retrieve the DOM elements matched by the Cheerio object. If an index is\n * specified, retrieve one of the elements matched by the Cheerio object.\n *\n * @example\n *   $('li').get(0).tagName\n *   //=> li\n *\n *   If no index is specified, retrieve all elements matched by the Cheerio object:\n *\n * @example\n *   $('li').get().length;\n *   //=> 3\n *\n * @param {number} [i] - Element to retrieve.\n * @returns {Node} The node at the `i`th position.\n * @see {@link https://api.jquery.com/get/}\n */\nexports.get = function (i) {\n  if (i == null) {\n    return slice.call(this);\n  }\n  return this[i < 0 ? this.length + i : i];\n};\n\n/**\n * Search for a given element from among the matched elements.\n *\n * @example\n *   $('.pear').index();\n *   //=> 2\n *   $('.orange').index('li');\n *   //=> 1\n *   $('.apple').index($('#fruit, li'));\n *   //=> 1\n *\n * @param {string | Cheerio | Node} [selectorOrNeedle] - Element to look for.\n * @returns {number} The index of the element.\n * @see {@link https://api.jquery.com/index/}\n */\nexports.index = function (selectorOrNeedle) {\n  var $haystack;\n  var needle;\n\n  if (arguments.length === 0) {\n    $haystack = this.parent().children();\n    needle = this[0];\n  } else if (typeof selectorOrNeedle === 'string') {\n    $haystack = this._make(selectorOrNeedle);\n    needle = this[0];\n  } else {\n    $haystack = this;\n    needle = selectorOrNeedle.cheerio ? selectorOrNeedle[0] : selectorOrNeedle;\n  }\n\n  return $haystack.get().indexOf(needle);\n};\n\n/**\n * Gets the elements matching the specified range (0-based position).\n *\n * @example\n *   $('li').slice(1).eq(0).text();\n *   //=> 'Orange'\n *\n *   $('li').slice(1, 2).length;\n *   //=> 1\n *\n * @param {number} [start] - An position at which the elements begin to be\n *   selected. If negative, it indicates an offset from the end of the set.\n * @param {number} [end] - An position at which the elements stop being\n *   selected. If negative, it indicates an offset from the end of the set. If\n *   omitted, the range continues until the end of the set.\n * @returns {Cheerio} The elements matching the specified range.\n * @see {@link https://api.jquery.com/slice/}\n */\nexports.slice = function (start, end) {\n  return this._make(slice.call(this, start, end));\n};\n\nfunction traverseParents(self, elem, selector, limit) {\n  var elems = [];\n  while (elem && elems.length < limit && elem.type !== 'root') {\n    if (!selector || exports.filter.call([elem], selector, self).length) {\n      elems.push(elem);\n    }\n    elem = elem.parent;\n  }\n  return elems;\n}\n\n/**\n * End the most recent filtering operation in the current chain and return the\n * set of matched elements to its previous state.\n *\n * @example\n *   $('li').eq(0).end().length;\n *   //=> 3\n *\n * @returns {Cheerio} The previous state of the set of matched elements.\n * @see {@link https://api.jquery.com/end/}\n */\nexports.end = function () {\n  return this.prevObject || this._make([]);\n};\n\n/**\n * Add elements to the set of matched elements.\n *\n * @example\n *   $('.apple').add('.orange').length;\n *   //=> 2\n *\n * @param {string | Cheerio} other - Elements to add.\n * @param {Cheerio} [context] - Optionally the context of the new selection.\n * @returns {Cheerio} The combined set.\n * @see {@link https://api.jquery.com/add/}\n */\nexports.add = function (other, context) {\n  var selection = this._make(other, context);\n  var contents = uniqueSort(this.get().concat(selection.get()));\n  return this._make(contents);\n};\n\n/**\n * Add the previous set of elements on the stack to the current set, optionally\n * filtered by a selector.\n *\n * @example\n *   $('li').eq(0).addBack('.orange').length;\n *   //=> 2\n *\n * @param {string} selector - Selector for the elements to add.\n * @returns {Cheerio} The combined set.\n * @see {@link https://api.jquery.com/addBack/}\n */\nexports.addBack = function (selector) {\n  return this.add(\n    arguments.length ? this.prevObject.filter(selector) : this.prevObject\n  );\n};\n"]},"metadata":{},"sourceType":"script"}