{"ast":null,"code":"var _jsxFileName = \"/Users/lhwn/Documents/workspace/react_career_prj/src/containers/Base/HeaderContainer.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { StaticRouter } from 'react-router';\nimport { bindActionCreators } from 'redux';\nimport * as userActions from '../../redux/modules/user';\nimport Header from '../../components/Base/Header';\nimport storage from '../../lib/storage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HeaderContainer = props => {\n  const {\n    visible,\n    open,\n    UserActions,\n    user\n  } = props;\n\n  const handleLogout = async () => {\n    try {\n      await UserActions.logout();\n    } catch (e) {\n      console.log(e);\n    }\n\n    storage.remove('loggedInfo');\n    window.location.href = '/'; // 홈페이지로 새로고침\n  };\n\n  if (!visible) return null;\n  const handleDrawerOpen = props.handleDrawerOpen;\n  return /*#__PURE__*/_jsxDEV(Header, {\n    open: open,\n    handleDrawerOpen: handleDrawerOpen,\n    logged: user.get('logged')\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 10\n  }, this);\n};\n\n_c = HeaderContainer;\nexport default connect(state => ({\n  visible: state.base.getIn(['header', 'visible']),\n  user: state.user\n}), dispatch => ({\n  UserActions: bindActionCreators(userActions, dispatch)\n}))(HeaderContainer);\n\nvar _c;\n\n$RefreshReg$(_c, \"HeaderContainer\");","map":{"version":3,"sources":["/Users/lhwn/Documents/workspace/react_career_prj/src/containers/Base/HeaderContainer.js"],"names":["React","connect","StaticRouter","bindActionCreators","userActions","Header","storage","HeaderContainer","props","visible","open","UserActions","user","handleLogout","logout","e","console","log","remove","window","location","href","handleDrawerOpen","get","state","base","getIn","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,OAAO,KAAKC,WAAZ,MAA6B,0BAA7B;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AACA,OAAOC,OAAP,MAAoB,mBAApB;;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,IAAX;AAAiBC,IAAAA,WAAjB;AAA8BC,IAAAA;AAA9B,MAAuCJ,KAA7C;;AAEA,QAAMK,YAAY,GAAG,YAAY;AAC/B,QAAI;AACF,YAAMF,WAAW,CAACG,MAAZ,EAAN;AACD,KAFD,CAEE,OAAOC,CAAP,EAAU;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD;;AAEDT,IAAAA,OAAO,CAACY,MAAR,CAAe,YAAf;AACAC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,GAAvB,CAR+B,CAQH;AAC7B,GATD;;AAWA,MAAI,CAACZ,OAAL,EAAc,OAAO,IAAP;AACd,QAAMa,gBAAgB,GAAGd,KAAK,CAACc,gBAA/B;AAEA,sBAAO,QAAC,MAAD;AAAQ,IAAA,IAAI,EAAEZ,IAAd;AAAoB,IAAA,gBAAgB,EAAEY,gBAAtC;AAAwD,IAAA,MAAM,EAAEV,IAAI,CAACW,GAAL,CAAS,QAAT;AAAhE;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAlBD;;KAAMhB,e;AAoBN,eAAeN,OAAO,CACnBuB,KAAD,KAAY;AACVf,EAAAA,OAAO,EAAEe,KAAK,CAACC,IAAN,CAAWC,KAAX,CAAiB,CAAC,QAAD,EAAW,SAAX,CAAjB,CADC;AAEVd,EAAAA,IAAI,EAAEY,KAAK,CAACZ;AAFF,CAAZ,CADoB,EAKnBe,QAAD,KAAe;AACbhB,EAAAA,WAAW,EAAER,kBAAkB,CAACC,WAAD,EAAcuB,QAAd;AADlB,CAAf,CALoB,CAAP,CAQbpB,eARa,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { StaticRouter } from 'react-router';\nimport { bindActionCreators } from 'redux';\nimport * as userActions from '../../redux/modules/user';\nimport Header from '../../components/Base/Header';\nimport storage from '../../lib/storage';\n\nconst HeaderContainer = (props) => {\n  const { visible, open, UserActions, user } = props;\n\n  const handleLogout = async () => {\n    try {\n      await UserActions.logout();\n    } catch (e) {\n      console.log(e);\n    }\n\n    storage.remove('loggedInfo');\n    window.location.href = '/'; // 홈페이지로 새로고침\n  };\n\n  if (!visible) return null;\n  const handleDrawerOpen = props.handleDrawerOpen;\n\n  return <Header open={open} handleDrawerOpen={handleDrawerOpen} logged={user.get('logged')}></Header>;\n};\n\nexport default connect(\n  (state) => ({\n    visible: state.base.getIn(['header', 'visible']),\n    user: state.user\n  }),\n  (dispatch) => ({\n    UserActions: bindActionCreators(userActions, dispatch)\n  })\n)(HeaderContainer);\n"]},"metadata":{},"sourceType":"module"}