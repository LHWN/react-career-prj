{"ast":null,"code":"var _jsxFileName = \"/Users/lhwn/Documents/workspace/react_career_prj/src/components/Main/Blog.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { makeStyles } from '@material-ui/core';\nimport Link from '@material-ui/core/Link';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Table from '@material-ui/core/Table';\nimport Avatar from '@material-ui/core/Avatar';\nimport Title from './Title';\nimport * as crawlActions from '../../redux/modules/crawl';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst preventDefault = event => {\n  event.preventDefault();\n};\n\nconst useStyles = makeStyles(theme => ({\n  seeMore: {\n    marginTop: theme.spacing(3)\n  },\n  authorContainer: {// display: 'flex'\n  },\n  profile: {\n    width: 30,\n    height: 30,\n    marginRight: 4\n  },\n  author: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center'\n  }\n}));\n\nconst Blog = props => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    posts,\n    CrawlActions\n  } = props;\n\n  const getBlogPosts = async () => {\n    try {\n      await CrawlActions.getBlogPosts();\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  useEffect(() => {\n    getBlogPosts();\n  }, []);\n  const blogPosts = posts.get('blogPosts');\n  let postRows = null;\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"Recent Blog Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      size: \"small\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Author\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: blogPosts.map(el => /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: el.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: el.category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: el.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            className: classes.authorContainer,\n            children: [/*#__PURE__*/_jsxDEV(Avatar, {\n              alt: \"profile\",\n              src: el.profile,\n              className: classes.profile\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes.author,\n              children: el.author\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.seeMore,\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        color: \"primary\",\n        href: \"#\",\n        onClick: preventDefault,\n        children: \"Click here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Blog, \"OAQf9SHEQQsOOZKjohcuI3tGtQ0=\", false, function () {\n  return [useStyles];\n});\n\n_c = Blog;\nexport default connect(state => ({\n  posts: state.crawl\n}), dispatch => ({\n  CrawlActions: bindActionCreators(crawlActions, dispatch)\n}))(Blog);\n\nvar _c;\n\n$RefreshReg$(_c, \"Blog\");","map":{"version":3,"sources":["/Users/lhwn/Documents/workspace/react_career_prj/src/components/Main/Blog.js"],"names":["React","useEffect","connect","bindActionCreators","makeStyles","Link","TableBody","TableCell","TableHead","TableRow","Table","Avatar","Title","crawlActions","preventDefault","event","useStyles","theme","seeMore","marginTop","spacing","authorContainer","profile","width","height","marginRight","author","display","flexDirection","justifyContent","Blog","props","classes","posts","CrawlActions","getBlogPosts","e","console","log","blogPosts","get","postRows","map","el","date","category","title","state","crawl","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { makeStyles } from '@material-ui/core';\nimport Link from '@material-ui/core/Link';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Table from '@material-ui/core/Table';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport Title from './Title';\nimport * as crawlActions from '../../redux/modules/crawl';\n\nconst preventDefault = (event) => {\n  event.preventDefault();\n};\n\nconst useStyles = makeStyles((theme) => ({\n  seeMore: {\n    marginTop: theme.spacing(3)\n  },\n  authorContainer: {\n    // display: 'flex'\n  },\n  profile: {\n    width: 30,\n    height: 30,\n    marginRight: 4\n  },\n  author: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center'\n  }\n}));\n\nconst Blog = (props) => {\n  const classes = useStyles();\n  const { posts, CrawlActions } = props;\n\n  const getBlogPosts = async () => {\n    try {\n      await CrawlActions.getBlogPosts();\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  useEffect(() => {\n    getBlogPosts();\n  }, []);\n\n  const blogPosts = posts.get('blogPosts');\n  let postRows = null;\n\n  return (\n    <React.Fragment>\n      <Title>Recent Blog Posts</Title>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Date</TableCell>\n            <TableCell>Category</TableCell>\n            <TableCell>Title</TableCell>\n            <TableCell>Author</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {blogPosts.map((el) => (\n            <TableRow>\n              <TableCell>{el.date}</TableCell>\n              <TableCell>{el.category}</TableCell>\n              <TableCell>{el.title}</TableCell>\n              <TableCell className={classes.authorContainer}>\n                <Avatar alt=\"profile\" src={el.profile} className={classes.profile}></Avatar>\n                <span className={classes.author}>{el.author}</span>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      {/* button 생각해보기 */}\n      <div className={classes.seeMore}>\n        <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\n          Click here\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default connect(\n  (state) => ({\n    posts: state.crawl\n  }),\n  (dispatch) => ({\n    CrawlActions: bindActionCreators(crawlActions, dispatch)\n  })\n)(Blog);\n"]},"metadata":{},"sourceType":"module"}