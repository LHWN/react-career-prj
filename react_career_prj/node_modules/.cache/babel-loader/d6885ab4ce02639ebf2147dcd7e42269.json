{"ast":null,"code":"/**\n * html > body > iframe > html > body >\n */\nconst axios = require('axios');\n\nconst cheerio = require('cheerio');\n\nconst BlogCrawler = () => {\n  // axios 를 활용해서 AJAX로 HTML 문서를 가져온다.\n  const getHTML = async () => {\n    try {\n      return await axios.get('https://blog.naver.com/PostList.nhn?blogId=wlsekffo1674&widgetTypeCall=true&directAccess=true');\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  let result = [];\n  getHTML().then(html => {\n    const $ = cheerio.load(html.data);\n    result['title'] = $('body').find('.pcol1').text();\n    return result;\n  }).then(res => console.log(res));\n  return result;\n};\n\n_c = BlogCrawler;\nexport default BlogCrawler();\n\nvar _c;\n\n$RefreshReg$(_c, \"BlogCrawler\");","map":{"version":3,"sources":["/Users/lhwn/Documents/workspace/react_career_prj/src/components/Main/BlogCrawler.js"],"names":["axios","require","cheerio","BlogCrawler","getHTML","get","e","console","error","result","then","html","$","load","data","find","text","res","log"],"mappings":"AAAA;AACA;AACA;AAEA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,SAAD,CAAvB;;AAEA,MAAME,WAAW,GAAG,MAAM;AACxB;AACA,QAAMC,OAAO,GAAG,YAAY;AAC1B,QAAI;AACF,aAAO,MAAMJ,KAAK,CAACK,GAAN,CAAU,+FAAV,CAAb;AACD,KAFD,CAEE,OAAOC,CAAP,EAAU;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACD;AACF,GAND;;AAOA,MAAIG,MAAM,GAAG,EAAb;AAEAL,EAAAA,OAAO,GACJM,IADH,CACSC,IAAD,IAAU;AACd,UAAMC,CAAC,GAAGV,OAAO,CAACW,IAAR,CAAaF,IAAI,CAACG,IAAlB,CAAV;AACAL,IAAAA,MAAM,CAAC,OAAD,CAAN,GAAkBG,CAAC,CAAC,MAAD,CAAD,CAAUG,IAAV,CAAe,QAAf,EAAyBC,IAAzB,EAAlB;AACA,WAAOP,MAAP;AACD,GALH,EAMGC,IANH,CAMSO,GAAD,IAASV,OAAO,CAACW,GAAR,CAAYD,GAAZ,CANjB;AAQA,SAAOR,MAAP;AACD,CApBD;;KAAMN,W;AAsBN,eAAeA,WAAW,EAA1B","sourcesContent":["/**\n * html > body > iframe > html > body >\n */\n\nconst axios = require('axios');\nconst cheerio = require('cheerio');\n\nconst BlogCrawler = () => {\n  // axios 를 활용해서 AJAX로 HTML 문서를 가져온다.\n  const getHTML = async () => {\n    try {\n      return await axios.get('https://blog.naver.com/PostList.nhn?blogId=wlsekffo1674&widgetTypeCall=true&directAccess=true');\n    } catch (e) {\n      console.error(e);\n    }\n  };\n  let result = [];\n\n  getHTML()\n    .then((html) => {\n      const $ = cheerio.load(html.data);\n      result['title'] = $('body').find('.pcol1').text();\n      return result;\n    })\n    .then((res) => console.log(res));\n\n  return result;\n};\n\nexport default BlogCrawler();\n"]},"metadata":{},"sourceType":"module"}