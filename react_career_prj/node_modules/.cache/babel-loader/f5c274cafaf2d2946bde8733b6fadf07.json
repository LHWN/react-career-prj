{"ast":null,"code":"var _jsxFileName = \"/Users/lhwn/Documents/workspace/react_career_prj/src/components/SignIn/SignInForm.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport styled from 'styled-components';\nimport * as authActions from '../../redux/modules/auth';\nimport { isEmail } from 'validator';\nimport SignInError from '../../components/SignIn/SignInError';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InsertFormPositioner = styled.div`\n  /* width: 100%; */\n  /* display: flex;\n    justify-content: center;\n    align-items: center; */\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  :root {\n    --color-shadow-inset: inset 0 1px 0 rgba(225, 228, 232, 0.2);\n  }\n`;\n_c = InsertFormPositioner;\nconst InsertFormContainer = styled.div`\n  width: 300px;\n\n  .largeText {\n    text-align: center;\n    font-size: 24px;\n    font-weight: 300;\n  }\n\n  .mediumText {\n    text-align: center;\n    font-size: 16px;\n    font-weight: 300;\n  }\n\n  .smallText {\n    text-align: center;\n    font-size: 14px;\n    font-weight: 300;\n  }\n`;\n_c2 = InsertFormContainer;\nconst InsertForm = styled.div`\n  /* width: 300px; */\n\n  border: 1px solid #eaecef;\n  border-radius: 5px;\n\n  position: relative; /* 추후 박스 하단에 추가 버튼을 위치시키기 위한 설정 */\n  background: #f6f8fa;\n  box-shadow: 0 0 8px 0 rgba(0, 0, 0, 0.04);\n\n  margin: 0 auto;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  box-sizing: border-box;\n\n  .accountLabel {\n    font-weight: 600;\n    display: block;\n    margin-bottom: 7px;\n    text-align: left;\n    font-size: 14px;\n    color: #24292e;\n  }\n\n  .input-block {\n    margin-top: 5px;\n    margin-bottom: 15px;\n    width: 100%;\n    padding: 5px 12px;\n    font-size: 14px;\n    line-height: 20px;\n    color: #24292e;\n    vertical-align: middle;\n    background-color: #fff;\n    border: 1px solid #e1e4e8;\n    border-radius: 6px;\n    outline: none;\n    box-shadow: --color-shadow-inset;\n    box-sizing: border-box;\n  }\n\n  .btn {\n    width: 90%;\n  }\n`;\n_c3 = InsertForm;\nconst RequestAccountLink = styled.div`\n  padding: 15px 20px;\n\n  text-align: center;\n  border: 1px solid #d1d5da;\n  border-radius: 5px;\n  box-sizing: border-box;\n  margin-top: 16px;\n\n  p {\n    margin-top: 0;\n  }\n\n  .requestAccText {\n    color: #0366d6;\n    cursor: pointer;\n    text-decoration: none;\n\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n`;\n_c4 = RequestAccountLink;\n\nclass SignInForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.setError = message => {\n      const {\n        AuthActions\n      } = this.props;\n      AuthActions.setError({\n        form: 'login',\n        message\n      });\n    };\n\n    this.validate = {\n      email: value => {\n        if (!isEmail(value)) {\n          this.setError('잘못된 이메일 형식입니다.');\n          return false;\n        }\n\n        return true;\n      }\n    };\n\n    this.handleChange = e => {\n      const {\n        AuthActions\n      } = this.props;\n      const {\n        name,\n        value\n      } = e.target;\n      AuthActions.changeInput({\n        name,\n        value,\n        form: 'login'\n      }); // 검증 작업\n\n      console.log(name + '  ' + this.validate['email']);\n      const validation = this.validate[name](value);\n      if (!validation) return;\n    };\n  }\n\n  componentWillUnmount() {\n    const {\n      AuthActions\n    } = this.props.AuthActions;\n    AuthActions.initializeForm('login');\n  }\n\n  render() {\n    const {\n      handleChange\n    } = this;\n    const {\n      error\n    } = this.props;\n    console.log('error:' + error);\n    return /*#__PURE__*/_jsxDEV(InsertFormPositioner, {\n      children: /*#__PURE__*/_jsxDEV(InsertFormContainer, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"largeText\",\n          children: \"Sign in to My Career!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InsertForm, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"login_field\",\n            className: \"accountLabel\",\n            children: \"Username or email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"email\",\n            id: \"login_field\",\n            className: \"input-block\",\n            autocapitalize: \"off\",\n            autocorrect: \"off\",\n            autocomplete: \"username\",\n            autofocus: \"autofocus\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"password\",\n            className: \"accountLabel\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            id: \"password\",\n            className: \"input-block\",\n            autocomplete: \"current-password\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this), error && /*#__PURE__*/_jsxDEV(SignInError, {\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            children: \"SUBMIT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RequestAccountLink, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mediumText\",\n            children: \"Do you want to see my career?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"mediumText\",\n            className: \"requestAccText\",\n            href: \"mailto:wlsekffo1674@naver.com ?subject=Request%20for%20an%20account. &body=Dear%20Hyewon%0D%0A%0D%0A I%20am%20writing%20to%20request%20an%20account%20that%20I%20can%20access.%0D%0A I%20will%20be%20waiting%20for%20your%20reply.%20Thank%20you.%0D%0A%0D%0A Best%20Regards.%0D%0A\",\n            children: \"Send me an email!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default connect(state => ({\n  form: state.auth.getIn(['login', 'form']),\n  error: state.auth.getIn(['login', 'error'])\n}), dispatch => ({\n  AuthActions: bindActionCreators(authActions, dispatch)\n}))(SignInForm);\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"InsertFormPositioner\");\n$RefreshReg$(_c2, \"InsertFormContainer\");\n$RefreshReg$(_c3, \"InsertForm\");\n$RefreshReg$(_c4, \"RequestAccountLink\");","map":{"version":3,"sources":["/Users/lhwn/Documents/workspace/react_career_prj/src/components/SignIn/SignInForm.js"],"names":["React","Component","connect","bindActionCreators","styled","authActions","isEmail","SignInError","InsertFormPositioner","div","InsertFormContainer","InsertForm","RequestAccountLink","SignInForm","setError","message","AuthActions","props","form","validate","email","value","handleChange","e","name","target","changeInput","console","log","validation","componentWillUnmount","initializeForm","render","error","state","auth","getIn","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAO,KAAKC,WAAZ,MAA6B,0BAA7B;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAOC,WAAP,MAAwB,qCAAxB;;AAEA,MAAMC,oBAAoB,GAAGJ,MAAM,CAACK,GAAI;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbA;KAAMD,oB;AAeN,MAAME,mBAAmB,GAAGN,MAAM,CAACK,GAAI;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CApBA;MAAMC,mB;AAsBN,MAAMC,UAAU,GAAGP,MAAM,CAACK,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA7CA;MAAME,U;AA+CN,MAAMC,kBAAkB,GAAGR,MAAM,CAACK,GAAI;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAtBA;MAAMG,kB;;AAwBN,MAAMC,UAAN,SAAyBZ,SAAzB,CAAmC;AAAA;AAAA;;AAAA,SACjCa,QADiC,GACrBC,OAAD,IAAa;AACtB,YAAM;AAAEC,QAAAA;AAAF,UAAkB,KAAKC,KAA7B;AACAD,MAAAA,WAAW,CAACF,QAAZ,CAAqB;AACnBI,QAAAA,IAAI,EAAE,OADa;AAEnBH,QAAAA;AAFmB,OAArB;AAID,KAPgC;;AAAA,SASjCI,QATiC,GAStB;AACTC,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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport styled from 'styled-components';\nimport * as authActions from '../../redux/modules/auth';\nimport { isEmail } from 'validator';\nimport SignInError from '../../components/SignIn/SignInError';\n\nconst InsertFormPositioner = styled.div`\n  /* width: 100%; */\n  /* display: flex;\n    justify-content: center;\n    align-items: center; */\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  :root {\n    --color-shadow-inset: inset 0 1px 0 rgba(225, 228, 232, 0.2);\n  }\n`;\n\nconst InsertFormContainer = styled.div`\n  width: 300px;\n\n  .largeText {\n    text-align: center;\n    font-size: 24px;\n    font-weight: 300;\n  }\n\n  .mediumText {\n    text-align: center;\n    font-size: 16px;\n    font-weight: 300;\n  }\n\n  .smallText {\n    text-align: center;\n    font-size: 14px;\n    font-weight: 300;\n  }\n`;\n\nconst InsertForm = styled.div`\n  /* width: 300px; */\n\n  border: 1px solid #eaecef;\n  border-radius: 5px;\n\n  position: relative; /* 추후 박스 하단에 추가 버튼을 위치시키기 위한 설정 */\n  background: #f6f8fa;\n  box-shadow: 0 0 8px 0 rgba(0, 0, 0, 0.04);\n\n  margin: 0 auto;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  box-sizing: border-box;\n\n  .accountLabel {\n    font-weight: 600;\n    display: block;\n    margin-bottom: 7px;\n    text-align: left;\n    font-size: 14px;\n    color: #24292e;\n  }\n\n  .input-block {\n    margin-top: 5px;\n    margin-bottom: 15px;\n    width: 100%;\n    padding: 5px 12px;\n    font-size: 14px;\n    line-height: 20px;\n    color: #24292e;\n    vertical-align: middle;\n    background-color: #fff;\n    border: 1px solid #e1e4e8;\n    border-radius: 6px;\n    outline: none;\n    box-shadow: --color-shadow-inset;\n    box-sizing: border-box;\n  }\n\n  .btn {\n    width: 90%;\n  }\n`;\n\nconst RequestAccountLink = styled.div`\n  padding: 15px 20px;\n\n  text-align: center;\n  border: 1px solid #d1d5da;\n  border-radius: 5px;\n  box-sizing: border-box;\n  margin-top: 16px;\n\n  p {\n    margin-top: 0;\n  }\n\n  .requestAccText {\n    color: #0366d6;\n    cursor: pointer;\n    text-decoration: none;\n\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n`;\n\nclass SignInForm extends Component {\n  setError = (message) => {\n    const { AuthActions } = this.props;\n    AuthActions.setError({\n      form: 'login',\n      message\n    });\n  };\n\n  validate = {\n    email: (value) => {\n      if (!isEmail(value)) {\n        this.setError('잘못된 이메일 형식입니다.');\n        return false;\n      }\n      return true;\n    }\n  };\n\n  componentWillUnmount() {\n    const { AuthActions } = this.props.AuthActions;\n    AuthActions.initializeForm('login');\n  }\n\n  handleChange = (e) => {\n    const { AuthActions } = this.props;\n    const { name, value } = e.target;\n\n    AuthActions.changeInput({\n      name,\n      value,\n      form: 'login'\n    });\n\n    // 검증 작업\n    console.log(name + '  ' + this.validate['email']);\n    const validation = this.validate[name](value);\n    if (!validation) return;\n  };\n\n  render() {\n    const { handleChange } = this;\n    const { error } = this.props;\n\n    console.log('error:' + error);\n\n    return (\n      <InsertFormPositioner>\n        <InsertFormContainer>\n          <h1 className=\"largeText\">Sign in to My Career!</h1>\n          <InsertForm>\n            <label for=\"login_field\" className=\"accountLabel\">\n              Username or email address\n            </label>\n            <input\n              type=\"text\"\n              name=\"email\"\n              id=\"login_field\"\n              className=\"input-block\"\n              autocapitalize=\"off\"\n              autocorrect=\"off\"\n              autocomplete=\"username\"\n              autofocus=\"autofocus\"\n              onChange={handleChange}\n            ></input>\n            <label for=\"password\" className=\"accountLabel\">\n              Password\n            </label>\n            <input type=\"password\" name=\"password\" id=\"password\" className=\"input-block\" autocomplete=\"current-password\" onChange={handleChange}></input>\n            {error && <SignInError>{error}</SignInError>}\n            <a>SUBMIT</a>\n          </InsertForm>\n          <RequestAccountLink>\n            <p className=\"mediumText\">Do you want to see my career?</p>\n            <a\n              className=\"mediumText\"\n              className=\"requestAccText\"\n              href=\"mailto:wlsekffo1674@naver.com\n                          ?subject=Request%20for%20an%20account.\n                          &body=Dear%20Hyewon%0D%0A%0D%0A\n                          I%20am%20writing%20to%20request%20an%20account%20that%20I%20can%20access.%0D%0A\n                          I%20will%20be%20waiting%20for%20your%20reply.%20Thank%20you.%0D%0A%0D%0A\n                          Best%20Regards.%0D%0A\"\n            >\n              Send me an email!\n            </a>\n          </RequestAccountLink>\n        </InsertFormContainer>\n      </InsertFormPositioner>\n    );\n  }\n}\n\nexport default connect(\n  (state) => ({\n    form: state.auth.getIn(['login', 'form']),\n    error: state.auth.getIn(['login', 'error'])\n  }),\n  (dispatch) => ({\n    AuthActions: bindActionCreators(authActions, dispatch)\n  })\n)(SignInForm);\n"]},"metadata":{},"sourceType":"module"}