{"ast":null,"code":"import { createAction, handleActions } from 'redux-actions';\nimport { Map } from 'immutable';\nimport * as CrawlAPI from '../../lib/api/crawl';\nimport { pender } from 'redux-pender';\nconst GET_BLOG_POSTS = 'crwal/GET_BLOG_POSTS'; // 블로그 포스트 정보 가져오기\n\nexport const getBlogPosts = createAction(GET_BLOG_POSTS, CrawlAPI.getBlogPosts);\nconsole.log('here is crawl.js');\nconst initialState = Map({\n  blogPosts: Map({\n    date: null,\n    category: null,\n    title: null,\n    author: null,\n    hits: 0\n  })\n});\nexport default handleActions({ ...pender({\n    type: GET_BLOG_POSTS,\n    onSuccess: (state, action) => state.set('blogPosts', Map(action.payload.data)),\n    onFailure: (state, action) => initialState\n  })\n}, initialState);","map":{"version":3,"sources":["/Users/lhwn/Documents/workspace/react_career_prj/src/redux/modules/crawl.js"],"names":["createAction","handleActions","Map","CrawlAPI","pender","GET_BLOG_POSTS","getBlogPosts","console","log","initialState","blogPosts","date","category","title","author","hits","type","onSuccess","state","action","set","payload","data","onFailure"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,eAA5C;AAEA,SAASC,GAAT,QAAoB,WAApB;AACA,OAAO,KAAKC,QAAZ,MAA0B,qBAA1B;AACA,SAASC,MAAT,QAAuB,cAAvB;AAEA,MAAMC,cAAc,GAAG,sBAAvB,C,CAA+C;;AAE/C,OAAO,MAAMC,YAAY,GAAGN,YAAY,CAACK,cAAD,EAAiBF,QAAQ,CAACG,YAA1B,CAAjC;AAEPC,OAAO,CAACC,GAAR,CAAY,kBAAZ;AAEA,MAAMC,YAAY,GAAGP,GAAG,CAAC;AACvBQ,EAAAA,SAAS,EAAER,GAAG,CAAC;AACbS,IAAAA,IAAI,EAAE,IADO;AAEbC,IAAAA,QAAQ,EAAE,IAFG;AAGbC,IAAAA,KAAK,EAAE,IAHM;AAIbC,IAAAA,MAAM,EAAE,IAJK;AAKbC,IAAAA,IAAI,EAAE;AALO,GAAD;AADS,CAAD,CAAxB;AAUA,eAAed,aAAa,CAC1B,EACE,GAAGG,MAAM,CAAC;AACRY,IAAAA,IAAI,EAAEX,cADE;AAERY,IAAAA,SAAS,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmBD,KAAK,CAACE,GAAN,CAAU,WAAV,EAAuBlB,GAAG,CAACiB,MAAM,CAACE,OAAP,CAAeC,IAAhB,CAA1B,CAFtB;AAGRC,IAAAA,SAAS,EAAE,CAACL,KAAD,EAAQC,MAAR,KAAmBV;AAHtB,GAAD;AADX,CAD0B,EAQ1BA,YAR0B,CAA5B","sourcesContent":["import { createAction, handleActions } from 'redux-actions';\n\nimport { Map } from 'immutable';\nimport * as CrawlAPI from '../../lib/api/crawl';\nimport { pender } from 'redux-pender';\n\nconst GET_BLOG_POSTS = 'crwal/GET_BLOG_POSTS'; // 블로그 포스트 정보 가져오기\n\nexport const getBlogPosts = createAction(GET_BLOG_POSTS, CrawlAPI.getBlogPosts);\n\nconsole.log('here is crawl.js');\n\nconst initialState = Map({\n  blogPosts: Map({\n    date: null,\n    category: null,\n    title: null,\n    author: null,\n    hits: 0\n  })\n});\n\nexport default handleActions(\n  {\n    ...pender({\n      type: GET_BLOG_POSTS,\n      onSuccess: (state, action) => state.set('blogPosts', Map(action.payload.data)),\n      onFailure: (state, action) => initialState\n    })\n  },\n  initialState\n);\n"]},"metadata":{},"sourceType":"module"}