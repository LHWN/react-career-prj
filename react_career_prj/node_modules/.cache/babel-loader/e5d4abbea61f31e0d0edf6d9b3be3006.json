{"ast":null,"code":"var _jsxFileName = \"/Users/lhwn/Documents/workspace/react_career_prj/src/components/Main/Today.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles, Typography } from '@material-ui/core';\nimport Link from '@material-ui/core/Link';\nimport moment from 'moment';\nimport Title from './Title';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst preventDefault = event => {\n  event.preventDefault();\n};\n\nconst useStyles = makeStyles({\n  depositContext: {\n    flex: 1\n  }\n});\n\nconst Today = () => {\n  _s();\n\n  const [currentTime, setCurrentTime] = useState(moment()); // useState Hook 을 통해 timer 값 Default 설정\n\n  let timer = null; // useEffect(() => {\n  //   // timer 변수에 인터벌 종료를 위해 저장\n  // timer = setInterval(() => {\n  //   setCurrentTime(moment()); // 현재 시간을 1000ms = 1s 마다 저장\n  // }, 1000);\n  // return () => {\n  //   clearInterval(timer); // 함수 unmount 시 clearInterval 해주기\n  // };\n  // }, []);\n\n  timer = setInterval(() => {\n    setCurrentTime(moment()); // 현재 시간을 1000ms = 1s 마다 저장\n  }, 1000);\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"Today\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      component: \"p\",\n      variant: \"h3\",\n      color: \"primary\",\n      children: currentTime.format('HH:mm:ss')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      component: \"p\",\n      variant: \"h5\",\n      children: ['on ', moment().format('DD'), ', ', ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'][moment().format('M') - 1], ', ', moment().format('YYYY')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      color: \"textSecondary\",\n      className: classes.depositContext,\n      children: ['created Date D', moment('2021-02-19').diff(moment().format('YYYY-MM-DD', 'days'), 'days')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        color: \"primary\",\n        href: \"#\",\n        onClick: preventDefault,\n        children: \"Click here.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Today, \"4Tdobz9O+njtpP/+uD4310GppuM=\", false, function () {\n  return [useStyles];\n});\n\n_c = Today;\nexport default Today;\n\nvar _c;\n\n$RefreshReg$(_c, \"Today\");","map":{"version":3,"sources":["/Users/lhwn/Documents/workspace/react_career_prj/src/components/Main/Today.js"],"names":["React","useEffect","useState","makeStyles","Typography","Link","moment","Title","preventDefault","event","useStyles","depositContext","flex","Today","currentTime","setCurrentTime","timer","setInterval","classes","format","diff"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,mBAAvC;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAChCA,EAAAA,KAAK,CAACD,cAAN;AACD,CAFD;;AAIA,MAAME,SAAS,GAAGP,UAAU,CAAC;AAC3BQ,EAAAA,cAAc,EAAE;AACdC,IAAAA,IAAI,EAAE;AADQ;AADW,CAAD,CAA5B;;AAMA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAACI,MAAM,EAAP,CAA9C,CADkB,CACwC;;AAC1D,MAAIU,KAAK,GAAG,IAAZ,CAFkB,CAGlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,EAAAA,KAAK,GAAGC,WAAW,CAAC,MAAM;AACxBF,IAAAA,cAAc,CAACT,MAAM,EAAP,CAAd,CADwB,CACE;AAC3B,GAFkB,EAEhB,IAFgB,CAAnB;AAIA,QAAMY,OAAO,GAAGR,SAAS,EAAzB;AACA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE,QAAC,UAAD;AAAY,MAAA,SAAS,EAAC,GAAtB;AAA0B,MAAA,OAAO,EAAC,IAAlC;AAAuC,MAAA,KAAK,EAAC,SAA7C;AAAA,gBACGI,WAAW,CAACK,MAAZ,CAAmB,UAAnB;AADH;AAAA;AAAA;AAAA;AAAA,YAHF,eAME,QAAC,UAAD;AAAY,MAAA,SAAS,EAAC,GAAtB;AAA0B,MAAA,OAAO,EAAC,IAAlC;AAAA,iBAEG,KAFH,EAGGb,MAAM,GAAGa,MAAT,CAAgB,IAAhB,CAHH,EAIG,IAJH,EAKG,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,EAAiD,MAAjD,EAAyD,MAAzD,EAAiE,QAAjE,EAA2E,WAA3E,EAAwF,SAAxF,EAAmG,UAAnG,EAA+G,UAA/G,EAA2Hb,MAAM,GAAGa,MAAT,CAAgB,GAAhB,IAAuB,CAAlJ,CALH,EAMG,IANH,EAOGb,MAAM,GAAGa,MAAT,CAAgB,MAAhB,CAPH;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAeE,QAAC,UAAD;AAAY,MAAA,KAAK,EAAC,eAAlB;AAAkC,MAAA,SAAS,EAAED,OAAO,CAACP,cAArD;AAAA,iBAEG,gBAFH,EAGGL,MAAM,CAAC,YAAD,CAAN,CAAqBc,IAArB,CAA0Bd,MAAM,GAAGa,MAAT,CAAgB,YAAhB,EAA8B,MAA9B,CAA1B,EAAiE,MAAjE,CAHH;AAAA;AAAA;AAAA;AAAA;AAAA,YAfF,eAqBE;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,KAAK,EAAC,SAAZ;AAAsB,QAAA,IAAI,EAAC,GAA3B;AAA+B,QAAA,OAAO,EAAEX,cAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YArBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CA/CD;;GAAMK,K;UAiBYH,S;;;KAjBZG,K;AAiDN,eAAeA,KAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport { makeStyles, Typography } from '@material-ui/core';\nimport Link from '@material-ui/core/Link';\nimport moment from 'moment';\n\nimport Title from './Title';\n\nconst preventDefault = (event) => {\n  event.preventDefault();\n};\n\nconst useStyles = makeStyles({\n  depositContext: {\n    flex: 1\n  }\n});\n\nconst Today = () => {\n  const [currentTime, setCurrentTime] = useState(moment()); // useState Hook 을 통해 timer 값 Default 설정\n  let timer = null;\n  // useEffect(() => {\n  //   // timer 변수에 인터벌 종료를 위해 저장\n  // timer = setInterval(() => {\n  //   setCurrentTime(moment()); // 현재 시간을 1000ms = 1s 마다 저장\n  // }, 1000);\n  // return () => {\n  //   clearInterval(timer); // 함수 unmount 시 clearInterval 해주기\n  // };\n  // }, []);\n\n  timer = setInterval(() => {\n    setCurrentTime(moment()); // 현재 시간을 1000ms = 1s 마다 저장\n  }, 1000);\n\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <Title>Today</Title>\n      {/* 현재시각 : 시계처럼 만들기 */}\n      <Typography component=\"p\" variant=\"h3\" color=\"primary\">\n        {currentTime.format('HH:mm:ss')}\n      </Typography>\n      <Typography component=\"p\" variant=\"h5\">\n        {/* 오늘 날짜 가져오기 */}\n        {'on '}\n        {moment().format('DD')}\n        {', '}\n        {['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'][moment().format('M') - 1]}\n        {', '}\n        {moment().format('YYYY')}\n      </Typography>\n      <Typography color=\"textSecondary\" className={classes.depositContext}>\n        {/* dday 가져오기 */}\n        {'created Date D'}\n        {moment('2021-02-19').diff(moment().format('YYYY-MM-DD', 'days'), 'days')}\n      </Typography>\n      {/* 클릭 구현할거 생각하기 */}\n      <div>\n        <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\n          Click here.\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Today;\n"]},"metadata":{},"sourceType":"module"}