{"ast":null,"code":"var _jsxFileName = \"/Users/lhwn/Documents/workspace/react_career_prj/src/containers/Base/HeaderContainer.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { StaticRouter } from 'react-router';\nimport { bindActionCreators } from 'redux';\nimport * as userActions from '../../redux/modules/user';\nimport Header from '../../components/Base/Header';\nimport storage from '../../lib/storage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst HeaderContainer = props => {\n  const {\n    visible,\n    open,\n    UserActions\n  } = props;\n\n  const handleLogout = async () => {\n    try {\n      await UserActions.logout();\n    } catch (e) {\n      console.log(e);\n    }\n\n    storage.remove('loggedInfo');\n  };\n\n  if (!visible) return null;\n  const handleDrawerOpen = props.handleDrawerOpen;\n  return /*#__PURE__*/_jsxDEV(Header, {\n    open: open,\n    handleDrawerOpen: handleDrawerOpen\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 10\n  }, this);\n};\n\n_c = HeaderContainer;\nexport default connect(state => ({\n  visible: state.base.getIn(['header', 'visible']),\n  user: state.user\n}), dispatch => ({\n  UserActions: bindActionCreators(userActions, dispatch)\n}))(HeaderContainer);\n\nvar _c;\n\n$RefreshReg$(_c, \"HeaderContainer\");","map":{"version":3,"sources":["/Users/lhwn/Documents/workspace/react_career_prj/src/containers/Base/HeaderContainer.js"],"names":["React","connect","StaticRouter","bindActionCreators","userActions","Header","storage","HeaderContainer","props","visible","open","UserActions","handleLogout","logout","e","console","log","remove","handleDrawerOpen","state","base","getIn","user","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,OAAO,KAAKC,WAAZ,MAA6B,0BAA7B;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AACA,OAAOC,OAAP,MAAoB,mBAApB;;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,IAAX;AAAiBC,IAAAA;AAAjB,MAAiCH,KAAvC;;AAEA,QAAMI,YAAY,GAAG,YAAY;AAC/B,QAAI;AACF,YAAMD,WAAW,CAACE,MAAZ,EAAN;AACD,KAFD,CAEE,OAAOC,CAAP,EAAU;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD;;AAEDR,IAAAA,OAAO,CAACW,MAAR,CAAe,YAAf;AACD,GARD;;AAUA,MAAI,CAACR,OAAL,EAAc,OAAO,IAAP;AACd,QAAMS,gBAAgB,GAAGV,KAAK,CAACU,gBAA/B;AACA,sBAAO,QAAC,MAAD;AAAQ,IAAA,IAAI,EAAER,IAAd;AAAoB,IAAA,gBAAgB,EAAEQ;AAAtC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAhBD;;KAAMX,e;AAkBN,eAAeN,OAAO,CACnBkB,KAAD,KAAY;AACVV,EAAAA,OAAO,EAAEU,KAAK,CAACC,IAAN,CAAWC,KAAX,CAAiB,CAAC,QAAD,EAAW,SAAX,CAAjB,CADC;AAEVC,EAAAA,IAAI,EAAEH,KAAK,CAACG;AAFF,CAAZ,CADoB,EAMnBC,QAAD,KAAe;AACbZ,EAAAA,WAAW,EAAER,kBAAkB,CAACC,WAAD,EAAcmB,QAAd;AADlB,CAAf,CANoB,CAAP,CASbhB,eATa,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { StaticRouter } from 'react-router';\nimport { bindActionCreators } from 'redux';\nimport * as userActions from '../../redux/modules/user';\nimport Header from '../../components/Base/Header';\nimport storage from '../../lib/storage';\n\nconst HeaderContainer = (props) => {\n  const { visible, open, UserActions } = props;\n\n  const handleLogout = async () => {\n    try {\n      await UserActions.logout();\n    } catch (e) {\n      console.log(e);\n    }\n\n    storage.remove('loggedInfo');\n  };\n\n  if (!visible) return null;\n  const handleDrawerOpen = props.handleDrawerOpen;\n  return <Header open={open} handleDrawerOpen={handleDrawerOpen}></Header>;\n};\n\nexport default connect(\n  (state) => ({\n    visible: state.base.getIn(['header', 'visible']),\n    user: state.user\n  }),\n\n  (dispatch) => ({\n    UserActions: bindActionCreators(userActions, dispatch)\n  })\n)(HeaderContainer);\n"]},"metadata":{},"sourceType":"module"}